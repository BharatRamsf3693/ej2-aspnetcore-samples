@{
    ViewData["Title"] = "DetailTemplate";
}

<h2>DetailTemplate</h2>

@section ControlsSection{
    <div class="control-section">
       
        <ejs-grid id="Grid" dataSource="ViewBag.datasource"  detailTemplate="#detailtemplate">
            <e-grid-columns>                
                <e-grid-column field="FirstName" headerText="First Name" width="110"></e-grid-column>
                <e-grid-column field="LastName" headerText="Last Name" width="110"></e-grid-column>
                <e-grid-column field="Title" headerText="Title" width="150"></e-grid-column>                
                <e-grid-column field="Country" headerText="Country" width="110"></e-grid-column>
            </e-grid-columns>
        </ejs-grid>
    </div>    
<style type="text/css" class="cssStyles">
    .detailtable td {
        font-size: 13px;
        padding: 4px;
        max-width: 0;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .photo {
        width: 100px;
        height: 100px;
        border-radius: 50px;
        box-shadow: inset 0 0 1px #e0e0e0, inset 0 0 14px rgba(0, 0, 0, 0.2);
    }
</style>
<script type="text/x-template" id="detailtemplate">
    <table class="detailtable" width="100%">
        <colgroup>
            <col width="35%" />
            <col width="35%" />
            <col width="30%" />
        </colgroup>
        <tbody>
            <tr>
                <td rowspan="4" style="text-align: center;">
                    <img class="photo" src="@Url.Content("~/scripts/Images/Employees/${EmployeeID}.png")" alt="${EmployeeID}" />
                </td>
                <td>
                    <span style="font-weight: 500;">First Name: </span> ${FirstName}
                </td>
                <td>
                    <span style="font-weight: 500;">Postal Code: </span> ${PostalCode}
                </td>
            </tr>
            <tr>
                <td>
                    <span style="font-weight: 500;">Last Name: </span> ${LastName}
                </td>
                <td>
                    <span style="font-weight: 500;">City: </span> ${City}
                </td>
            </tr>
            <tr>
                <td>
                    <span style="font-weight: 500;">Title: </span> ${Title}
                </td>
                <td>
                    <span style="font-weight: 500;">Phone: </span> ${HomePhone}
                </td>
            </tr>
            <tr>
                <td>
                    <span style="font-weight: 500;">Address: </span> ${Address}
                </td>
                <td>
                    <span style="font-weight: 500;">HireDate: </span> ${HireDate.toLocaleDateString()}
                </td>
            </tr>
        </tbody>
    </table>
</script>

}
@section ActionDescription{
	<div id="action-description">
		 <p>This sample demonstrates the Grid component with the detail template feature. Click the expand button
			in each Grid row to show the detailed information about a row.
		</p>
	</div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Detail Template in ASP.NET Core Data Grid control. Explore here for more details."/>
                }

@section Description{
    <div id="description">
		     <p>
				The detail row template provides an additional information about a data row which can show or hide by clicking on expand
				or collapse button. The <code>detailTemplate</code> property accepts either string or HTML element`s ID value, which will be used as the template
				for the detail row.
			</p>
			<p>
				In this demo, we have presented Employee Information with image in the detail row.
			</p>
			<p>The template expression should be provided inside <code>${...}</code> interpolation syntax.</p>
			<br/>
    </div>
}
@section Title{
                    <title>ASP.NET Core Data Grid Detail Template Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Detail Template in ASP.NET Core Data Grid Control</h1>
                }