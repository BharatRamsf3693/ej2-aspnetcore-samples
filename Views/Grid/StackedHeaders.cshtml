@section ControlsSection{
    <div class="control-section">
        <ejs-grid id="Grid" dataSource="ViewBag.datasource"  allowPaging="true" allowResizing="true">
            <e-grid-pagesettings pageCount="5"></e-grid-pagesettings>
            <e-grid-columns>
                <e-grid-column field="OrderID" headerText="Order ID" isPrimaryKey="true" textAlign="Right" width="120" minWidth="10"></e-grid-column>
                <e-grid-column headerText="Order Details" columns="@( new List<Syncfusion.EJ2.Grids.GridColumn>() { new Syncfusion.EJ2.Grids.GridColumn { Field = "OrderDate", Width = "130", HeaderText = "Order Date", Format="yMd", TextAlign= Syncfusion.EJ2.Grids.TextAlign.Right, MinWidth="10"  },
                                                                                                                   new Syncfusion.EJ2.Grids.GridColumn { Field = "Freight", Width = "135", HeaderText = "Freight($)", Format="C2",  TextAlign= Syncfusion.EJ2.Grids.TextAlign.Right,  MinWidth="10"  } } )">
                </e-grid-column>
                <e-grid-column headerText="Shipped Details" columns="@( new List<Syncfusion.EJ2.Grids.GridColumn>() { new Syncfusion.EJ2.Grids.GridColumn { Field = "ShippedDate", Width = "140", HeaderText = "Shipped Date", TextAlign=Syncfusion.EJ2.Grids.TextAlign.Right, Format="yMd",  MinWidth="10"  },
                                                                                                                     new Syncfusion.EJ2.Grids.GridColumn { Field = "ShipCountry", Width = "145", HeaderText = "Ship Country", MinWidth="10"  } } )">
                 </e-grid-column>               
            </e-grid-columns>
        </ejs-grid>
    </div>  
}
@section ActionDescription{
	<div id="action-description">
		<p>This sample demonstrates the Grid component with the stacked header and resize feature. In this sample, we have shown multiple level of column headers.
		</p>
	</div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Stacked Header in ASP.NET Core Data Grid control. Explore here for more details."/>
                }

@section Description{
    <div id="description">
		<p>The Grid columns can be stacked/grouped in order to show multiple level of column headers. 
        It can be done by setting the <code>columns->columns</code> property.
		</p>
         <p>
            The Grid columns can be resized by clicking and dragging at the right edge of columns header. To enable column, resize behavior, set <code>
                <a target="_blank" class="code"
                   href="https://help.syncfusion.com/cr/cref_files/aspnetcore-js2/Syncfusion.EJ2~Syncfusion.EJ2.Grids.Grid~AllowResizing.html">
                    allowResizing
                </a>
            </code> property as true. You can also prevent the resize of the particular column by setting
            <code> columns->allowResizing </code> as false in columns definition.
        </p>
		<p>
			In this demo, the columns <strong>OrderDate, Freight</strong> are grouped under <strong>Order Details</strong>,
			the columns <strong>ShippedDate, ShipCountry</strong> are grouped under <strong>Ship Details</strong>. 
		</p>		
	
    </div>
}
@section Title{
                    <title>ASP.NET Core Data Grid Stacked Header Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Stacked Header in ASP.NET Core Data Grid Control</h1>
                }