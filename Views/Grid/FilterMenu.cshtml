@{
    ViewData["Title"] = "FilterMenu";
}

<h2>FilterMenu</h2>

@section ControlsSection{
    <div class="col-lg-8 control-section">
        <div class="control-wrapper">
            <div class="control-section">
                <ejs-grid id="Grid" dataSource="ViewBag.datasource" allowFiltering="true" allowSorting="true" allowPaging="true">
                    <e-grid-filterSettings type="Menu"></e-grid-filterSettings>
                    <e-grid-pagesettings pageCount="5"></e-grid-pagesettings>
                    <e-grid-columns>
                        <e-grid-column field="OrderID" headerText="Order ID" isPrimaryKey="true" textAlign="Right" width="120"></e-grid-column>
                        <e-grid-column field="CustomerID" headerText="Customer Name" width="150"></e-grid-column>
                        <e-grid-column field="OrderDate" headerText="Order Date" customFormat="@(new {type = "datetime", format = "M/d/y hh:mm a" })" width="130"></e-grid-column>
                        <e-grid-column field="Freight" headerText="Freight" textAlign="Right" format="C2" width="120"></e-grid-column>
                    </e-grid-columns>

                </ejs-grid>
            </div>
            </div>
        </div>
<div class="col-lg-4 property-section">

   

    <table id="property" title="Properties" style="width: 100%;">


        <tr>
            <td class="left-side">Filter Type :</td>
            <td>
                <ejs-dropdownlist id="filtertype" dataSource="@ViewBag.filtertype" value="@("Menu")" change="onChange" index="2" popupHeight="220px"></ejs-dropdownlist>
            </td>
        </tr>
    </table>
</div>

<script>
        function onChange() {
            var gridObj = document.getElementById("Grid").ej2_instances[0], dropdpwnObj = document.getElementById("filtertype").ej2_instances[0];
            gridObj.filterSettings.type = dropdpwnObj.value;
    }
</script>
}
@section ActionDescription{
	<div id="action-description">
		 <p>
			This sample demonstrates the way of filtering Grid columns using menu, checkbox and excel filter UI. In this sample, click the filtering
			icon from column header to show filter UI for a particular column. You can change the filter type from the properties
			panel.
		</p>
	</div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Filter Menu in ASP.NET Core Data Grid control. Explore here for more details."/>
                }

@section Description{
    <div id="description">
		  <p>The filtering feature enables the user to view the reduced amount of records based on filter criteria. It can be enabled
				by setting <code>allowFiltering</code> property as true. </p>
			<p>Grid supports the following filter types. They are </p>
			<ul>
				<li><code>Filterbar</code></li>
				<li><code>Menu</code></li>
				<li><code>Checkbox</code></li>
				<li><code>Excel</code></li>
			</ul>
			you can change the filter type by setting <code>filterSettings->type</code>
                                                      <p> In this demo, filter menu enabled by default , you can switch to other filter type by using dropdown and while Excel filter type is selected, you can sort the column using the sorting option available in the excel filter dialog. </p>
    </div>
}
@section Title{
                    <title>ASP.NET Core Data Grid Filter Menu Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Filter Menu in ASP.NET Core Data Grid Control</h1>
                }