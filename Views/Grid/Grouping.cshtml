@{
    ViewData["Title"] = "Grouping";
    var alertanimation = new Syncfusion.EJ2.Popups.DialogAnimationSettings { Effect = Syncfusion.EJ2.Popups.DialogEffect.None };
}



@section ControlsSection{
    <div class="control-section">
        <ejs-grid id="Grid" created="created" dataSource="ViewBag.datasource" allowGrouping="true" allowPaging="true">
            <e-grid-groupSettings showDropArea="true" columns="@(new string[] { "Country"})"></e-grid-groupSettings>
            <e-grid-pagesettings pageCount=5></e-grid-pagesettings>
            <e-grid-columns>
                <e-grid-column field="Inventor" headerText="Inventor Name" width="140"></e-grid-column>
                <e-grid-column field="NumberofPatentFamilies" headerText="No of Patent Families" width="185" textAlign="Right"></e-grid-column>
                <e-grid-column field="Country" headerText="Country" width="120"></e-grid-column>
                <e-grid-column field="Active" headerText="Active" width="130"></e-grid-column>
                <e-grid-column field="Mainfieldsofinvention" headerText="Main fields of invention" allowGrouping="false" width="200"></e-grid-column>
            </e-grid-columns>
        </ejs-grid>
    </div>
    <ejs-dialog id="alert_dialog" animationSettings="alertanimation" visible="false" target=".control-section" width="300px" header="Grouping" content="Grouping is disabled for this column">
        <e-dialog-buttons>
            <e-dialog-dialogbutton buttonModel="ViewBag.alertbutton" click="alertBtnClick"></e-dialog-dialogbutton>
        </e-dialog-buttons>
    </ejs-dialog>

    <script>

        function created(args) {
            var grid = document.getElementById('Grid').ej2_instances[0];
            grid.on("columnDragStart", columnDragStart, this);
        }
        function columnDragStart(args) {
             if(args.column.field === "Mainfieldsofinvention"){
                 var dialogObj = document.getElementById('alert_dialog').ej2_instances[0];
                 dialogObj.show();
              }
        }
        function alertBtnClick() {
            var dialogObj = document.getElementById('alert_dialog').ej2_instances[0];
            dialogObj.hide();
        }
    </script>

}
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates grouping feature of the Grid component. In this sample, the Grid data is grouped against
            Country column. To group any other column simply drag the column header and drop on the group drop area.
        </p>
    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Grouping in ASP.NET Core Data Grid control. Explore here for more details."/>
                }

@section Description{
    <div id="description">
        <p>
            The Grid control has options to group the records based on the required column. When grouping is applied, grouped records
            are organized into a hierarchical structure to facilitate easier expansion and collapse of records. To enable grouping,
            set <code>allowGrouping</code> property as true.
        </p>
        <p>Columns can be grouped by simply dragging the column header and drop on the group drop area.</p>
        <p>In this demo, to group a specify column, drag and drop the column in the group drop area.</p>
    </div>
}
@section Title{
                    <title>ASP.NET Core Data Grid Grouping Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Grouping in ASP.NET Core Data Grid Control</h1>
                }