@using Syncfusion.EJ2;
@section Meta{
                    <meta name="description" content="This example demonstrates the Default Functionalities in ASP.NET Core LinearGauge control. Explore here for more details."/>
                }
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample illustrates the default rendering of linear gauge.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            This sample demonstrates the default linear gauge. The linear gauge control indicates the values of scales in horizontal
            or vertical sliding meter. You can use <code>axes</code>,
            <code>ranges</code>, <code>pointers</code> and <code>container</code> properties to customize the appearance of the
            gauge. an axis, annotation and a pointer has been used.
        </p>
        <br>
        <p>
            More information about linear gauge can be found in this
            <a target="_blank" href="http://ej2.syncfusion.com/documentation">documentation section</a>.
        </p>
    </div>
}
@section ControlsSection{
@{ 
    var labelFont = new Syncfusion.EJ2.LinearGauge.LinearGaugeFont { FontFamily = "Segoe UI", Opacity = 1 };
 }
    <div class="control-section" style="border-right:0px;">
        <ejs-lineargauge id="linear" load="gaugeLoad" orientation="Horizontal">
            <e-lineargauge-axes>
                <e-lineargauge-axis>
                    <e-axis-labelstyle offset="48" font="labelFont">
                    </e-axis-labelstyle>
                </e-lineargauge-axis>
            </e-lineargauge-axes>
        </ejs-lineargauge>
    </div>
    <script>
        window.gaugeLoad = function (args) {
            @* custom code start *@
            var theme = themeName ? themeName : 'Material';
            args.gauge.theme = (theme.charAt(0).toUpperCase() +
                theme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');
            @* custom code end *@
            args.gauge.orientation = "Horizontal";
            var axis = args.gauge.axes[0];
            var annotation = args.gauge.annotations[0];
            axis.majorTicks = {
                    interval: 10
            }
            axis.pointers = [{
                value: 10,
                height: 15,
                width: 15,
                placement: 'Near',
                offset: -50,
                markerType: 'Triangle'
            }];
            axis.minorTicks = {
                    interval: 2
            }
            annotation.content = '<div id="pointer" style="width:70px"><h1 style="font-size:14px;font-family: Segoe UI">10 MPH</h1></div>';
            annotation.axisIndex = 0;
            annotation.axisValue = 10;
            annotation.x = 10;
            annotation.zIndex = '1';
            annotation.y = -70;

        }
    </script>

}
@section Title{
                    <title>ASP.NET Core LinearGauge Default Functionalities Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Default Functionalities in ASP.NET Core LinearGauge Control</h1>
                }