@using Syncfusion.EJ2;
@section ControlsSection{
    @{
        var labelFont = new Syncfusion.EJ2.LinearGauge.LinearGaugeFont { FontFamily = "Segoe UI", Size = "0px", Color = "transparent", Opacity = 1 };
    }
    <div class="control-section" style="border-right:0px;">
        <ejs-lineargauge id="linear" load="gaugeLoad" orientation="Horizontal">
            <e-lineargauge-axes>
                <e-lineargauge-axis>
                    <e-axis-line width="0" color="transparent"></e-axis-line>
                    <e-axis-labelstyle offset="48" font="labelFont">
                    </e-axis-labelstyle>
                </e-lineargauge-axis>
            </e-lineargauge-axes>
        </ejs-lineargauge>
    </div>
    <script>
        var count;
        window.gaugeLoad = function (args) {
            if (window.gaugeLoaded)
                return;
            window.gaugeLoaded = true;
            @* custom code start *@
            var theme = themeName ? themeName : 'Material';
            theme = (theme.charAt(0).toUpperCase() +
                theme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');
            if(args.gauge.theme !== theme)
                args.gauge.theme = theme;
            @* custom code end *@
            args.gauge.orientation = "Horizontal";
            var axis = args.gauge.axes[0];

            axis.pointers = [
                {
                    value: 35,
                    height: 15,
                    width: 15,
                    placement: 'Near',
                    markerType: 'Triangle',
                    offset: -100
                }
            ];
            axis.minorTicks = {
                height: 0
            };
            axis.majorTicks = {
                height: 0
            };
            axis.ranges = [{
                start: 0,
                end: 30,
                startWidth: 50,
                endWidth: 50
            },
            {
                start: 30,
                end: 60,
                startWidth: 50,
                endWidth: 50
            },
            {
                start: 60,
                end: 90,
                startWidth: 50,
                endWidth: 50
            }];
            args.gauge.rangePalettes = ['#30b32d', '#ffdd00', '#f03e3e'];

            //if (count === undefined) {

                var annotation = args.gauge.annotations[0];
            annotation.content = '<div id="title" style="width:200px;"><p style="font-size:18px;font-family: Segoe UI">CPU Utilization</p></div>',
                annotation.horizontalAlignment = 'Center';
                annotation.x = 35;
                annotation.zIndex = '1';
                annotation.y = 50

                args.gauge.annotations[1] = new ej.lineargauge.Annotation(args.gauge);
                annotation = args.gauge.annotations[1];
                annotation.propName = "annotations";
                annotation.content = '<div id="low"><img style="height:25px;width:25px;" src="../styles/images/lineargauge/Low.png"/></div>';
                annotation.axisIndex = 0;
                annotation.axisValue = 15;
                annotation.y = -25;
                annotation.zIndex = '1';

                args.gauge.annotations[2] = new ej.lineargauge.Annotation(args.gauge);
                annotation = args.gauge.annotations[2];
                annotation.propName = "annotations";
                annotation.content = '<div id="moderate"><img style="height:25px;width:25px;" src="../styles/images/lineargauge/Moderate.png"/></div>';
                annotation.axisIndex = 0;
                annotation.axisValue = 45;
                annotation.y = -25;
                annotation.zIndex = '1';

                args.gauge.annotations[3] = new ej.lineargauge.Annotation(args.gauge);
                annotation = args.gauge.annotations[3];
                annotation.propName = "annotations";
                annotation.content = '<div id="high"><img style="height:25px;width:25px;" src="../styles/images/lineargauge/High.png"/></div>';
                annotation.axisIndex = 0;
                annotation.axisValue = 75;
                annotation.y = -25;
                annotation.zIndex = '1';

                args.gauge.annotations[4] = new ej.lineargauge.Annotation(args.gauge);
                annotation = args.gauge.annotations[4];
                annotation.propName = "annotations";
            annotation.content = '<div id="lowText"><p style="font-size:15px;color:#248622;font-family: Segoe UI">Low</p></div>';
                annotation.axisIndex = 0;
                annotation.axisValue = 15;
                annotation.y = 20;
                annotation.zIndex = '1';

                args.gauge.annotations[5] = new ej.lineargauge.Annotation(args.gauge);
                annotation = args.gauge.annotations[5];
                annotation.propName = "annotations";
            annotation.content = '<div id="moderateText"><p style="font-size:15px;color:#ba9e2a;font-family: Segoe UI">Moderate</p></div>';
                annotation.axisIndex = 0;
                annotation.axisValue = 45;
                annotation.y = 20;
                annotation.zIndex = '1';

                args.gauge.annotations[6] = new ej.lineargauge.Annotation(args.gauge);
                annotation = args.gauge.annotations[6];
                annotation.propName = "annotations";
            annotation.content = '<div id="highText"><p style="font-size:15px;color:#b42f2f;font-family: Segoe UI">High</p></div>';
                annotation.axisIndex = 0;
                annotation.axisValue = 75;
                annotation.y = 20;
                annotation.zIndex = '1';

                //count = 0;
            //}
        }
    </script>

}
@section Meta{
    <meta name="description" content="This example demonstrates the Annotation in ASP.NET Core LinearGauge control. Explore here for more details." />
}
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample illustrates the CPU Utilization of a resource by using annotation feature.
        </p>
    </div>
}
@section Description{
    <div id="description">
        In this sample we have used annotations to indicate low, moderate and high ranges. Annotations are used to place the texts,
        shapes or images anywhere in the gauge. You can use
        <code>content</code>,
        <code>x</code>,
        <code>y</code>,
        <code>zIndex</code> properties to customize the annotations. And you can specify the id of the element that needs to be displayed, in the
        content property.
    </div>
}
@section Title{
    <title>ASP.NET Core LinearGauge Annotation Example - Syncfusion Demos </title>
}
@section Header{
    <h1 class='sb-sample-text'>Example of Annotation in ASP.NET Core LinearGauge Control</h1>
}