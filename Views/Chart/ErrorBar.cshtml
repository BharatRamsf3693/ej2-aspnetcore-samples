@using Syncfusion.EJ2
@section ControlsSection{
    @{ 
        var Fixed = "Fixed";
        var Vertical = "Vertical";
        var Plus = "Both";
    }
    <div class="col-md-8 control-section" align="center">
        <ejs-chart id="container" load="window.onChartLoad" title="Sales Distribution of Car by Region"
                  pointRender="pointRender">
            <e-chart-chartarea>
                <e-chartarea-border width="0"></e-chartarea-border>
            </e-chart-chartarea>
            <e-chart-tooltipsettings enable="true">
            </e-chart-tooltipsettings>
            <e-chart-primaryxaxis valueType="Category" interval=1>
                <e-majorgridlines width="0"></e-majorgridlines>
            </e-chart-primaryxaxis>
            <e-chart-primaryyaxis labelFormat="{value}%"
                            minimum=15 maximum=45>
                <e-majorticklines width="0"></e-majorticklines>
                <e-linestyle width="0"></e-linestyle>
            </e-chart-primaryyaxis>
            <e-chart-chartarea>
                <e-chartarea-border width="0" color="transparent"></e-chartarea-border>
            </e-chart-chartarea>
            <e-chart-legendsettings visible="false">
            </e-chart-legendsettings>
            <e-series-collection>
                <e-series dataSource="ViewBag.dataSource" name="Sales" xName="x" yName="y" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Scatter" >
                    <e-series-marker height="10" width="10"></e-series-marker>
                    <e-series-errorbar visible="true" horizontalError="3" verticalError="3">
                    </e-series-errorbar>
                </e-series>
            </e-series-collection>
        </ejs-chart>
    </div>
    <div class="col-md-4 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tr style="height: 50px">
                <td style="width: 60%">
                    <div>Error Bar Type:</div>
                </td>
                <td style="width: 40%;">
                    <ejs-dropdownlist id="type" dataSource="@ViewBag.type" value="Fixed" change="type" index="0" popupHeight="220px"></ejs-dropdownlist>
                </td>
            </tr>
            <tr style="height: 50px">
                <td style="width: 60%">
                    <div>Drawing Mode:</div>
                </td>
                <td style="width: 40%;">
                    <ejs-dropdownlist id="mode" dataSource="@ViewBag.mode" value="Vertical" change="mode" index="0" popupHeight="220px"></ejs-dropdownlist>
                </td>
            </tr>
            <tr style="height: 50px">
                <td style="width: 60%">
                    <div>Drawing Direction:</div>
                </td>
                <td style="width: 40%;">
                    <ejs-dropdownlist id="direction" dataSource="@ViewBag.direction" value="Plus" change="direction" index="0" popupHeight="220px"></ejs-dropdownlist>
                </td>
            </tr>
            <tr style="height: 50px">
                <td style="width: 60%">
                    <div>Vertical Error:</div>
                </td>
                <td style="width: 40%;">
                    <div style='margin-top: 0px;'>
                        <ejs-numerictextbox id="vertical" min="1" max="20" step="3" value="3" width="120" change="vertical"></ejs-numerictextbox>
                    </div>
                </td>
            </tr>
            <tr style="height: 50px">
                <td style="width: 60%">
                    <div>Horizontal Error:</div>
                </td>
                <td style="width: 40%;">
                    <div style='margin-top: 0px;'>
                        <ejs-numerictextbox id="horizontal" min="1" max="20" step="3" value="3" width="120" change="horizontal"></ejs-numerictextbox>
                    </div>
                </td>
            </tr>
        </table>
    </div>
    <script src="~/scripts/chart/financial-data.js"></script>
    <script>
    @*custom code start*@
        window.onChartLoad = function (args) {
            var selectedTheme = location.hash.split("/")[1];
            selectedTheme = selectedTheme ? selectedTheme : "Material";
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast'));
        }  
        function pointRender(args) {
            var selectedTheme = location.hash.split('/')[1];
            if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {
                args.fill = window.fabricColors[args.point.index % 10];
            }
            else if (selectedTheme === 'material') {
                args.fill = window.materialColors[args.point.index % 10];
            }
            else if (selectedTheme === 'bootstrap') {
                args.fill = window.bootstrapColors[args.point.index % 10];
            }
            else if (selectedTheme === 'fluent') {
                 args.fill = window.fluentColors[args.point.index % 10];
            } 
            else if (selectedTheme === 'fluent-dark') {
                 args.fill = window.fluentDarkColors[args.point.index % 10];
            }
            else {
                args.fill = window.highContrastColors[args.point.index % 10];
            }
        };
            @*custom code end*@  
        function type(args) {
            var chart = document.getElementById('container').ej2_instances[0];
            chart.series[0].errorBar.type = this.value;
            chart.series[0].animation.enable = false;
            chart.refresh();

        }
        function mode(args) {
            var chart = document.getElementById('container').ej2_instances[0];
            chart.series[0].errorBar.mode = this.value;
            chart.series[0].animation.enable = false;
            chart.refresh();

        }
        function direction(args) {
            var chart = document.getElementById('container').ej2_instances[0];
            chart.series[0].errorBar.direction = this.value;
            chart.series[0].animation.enable = false;
            chart.refresh();

        }
        function vertical(args) {
            var chart = document.getElementById('container').ej2_instances[0];
            chart.series[0].errorBar.verticalError = this.value;
            chart.series[0].animation.enable = false;
            chart.refresh();

        }
        function horizontal(args) {
            var chart = document.getElementById('container').ej2_instances[0];
            chart.series[0].errorBar.horizontalError = this.value;
            chart.series[0].animation.enable = false;
            chart.refresh();

        }
    </script>

}
@*custom code start*@
@section Scripts {

}

<style>
    #control-container {
        padding: 0px !important;
    }
</style>
@section Meta{
                    <meta name="description" content="This example demonstrates the ErrorBar in ASP.NET Core Chart control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <p>
        This sample visualizes the errors in sales distribution of a car for a certain period with error bar in the chart. In property panel, the options are available to change error bar type, drawing mode, and drawing direction of error bar by means of dropdown.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the error bar charts. Line type charts are used for cartesian type
        series. You can use error bar by set
        <code>visible</code> property to true. You can change the error bar rendering type using
        <code>type</code> property like fixedValue, percentage, standardDeviation, standardError and custom option of errorBar. To change
        the error bar line length you can use
        <code>verticalError</code> property.
    </p>
    <p>
        Chart supports the following error bar types.
    </p>
    <ul>
        <li>
            <code>Fixed</code> - Renders a fixed type error bar.
        </li>
        <li>
            <code>Percentage</code> - Renders a percentage type error bar.
        </li>
        <li>
            <code>StandardDeviation</code> - Renders a standard deviation type error bar.
        </li>
        <li>
            <code>StandardError</code> - Renders a standard error type error bar.
        </li>
        <li>
            <code>Custom</code> - Renders a custom type error bar.
        </li>
    </ul>
   
    <p>
        More information on the error bar can be found in this
        <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-axis.html#valuetype-valuetype">documentation section</a>.
    </p>
}
@section Title{
                 <title>ASP.NET Core Chart ErrorBar Example - Syncfusion Demos </title>
             }
@section Header{
                <h1 class='sb-sample-text'>Example of ErrorBar in ASP.NET Core Chart Control</h1>
            }