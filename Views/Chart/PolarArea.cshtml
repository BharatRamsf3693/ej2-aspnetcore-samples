@using Syncfusion.EJ2
@section ControlsSection{
    @{      

        var Polar = "Polar";
    }
    <div class="control-section col-lg-9">        
            <ejs-chart id="container" load="window.onChartLoad" title="Average Sales Comparison">
                <e-chart-tooltipsettings enable="true">
                </e-chart-tooltipsettings>
                <e-chart-primaryxaxis interval="1" coefficient="100" labelPlacement="OnTicks" valueType="Category"></e-chart-primaryxaxis>
                <e-chart-primaryyaxis title="Revenue in Millios" labelFormat="{value}M"></e-chart-primaryyaxis>
                <e-series-collection>
                    <e-series dataSource="ViewBag.dataSource" opacity=0.5 name="Product A" xName="x" width="2" yName="y" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Polar" drawType="@Syncfusion.EJ2.Charts.ChartDrawType.Area">
                        <e-series-border color="transparent" width="0"></e-series-border>
                    </e-series>
                    <e-series dataSource="ViewBag.dataSource1" opacity=0.5 name="Product B" xName="x" width="2" yName="y" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Polar" drawType="@Syncfusion.EJ2.Charts.ChartDrawType.Area">
                        <e-series-border color="transparent" width="0"></e-series-border>
                    </e-series>
                    <e-series dataSource="ViewBag.dataSource2" opacity=0.5 name="Product C" xName="x" width="2" yName="y" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Polar" drawType="@Syncfusion.EJ2.Charts.ChartDrawType.Area">
                        <e-series-border color="transparent" width="0"></e-series-border>
                    </e-series>
                </e-series-collection>
            </ejs-chart>
        </div>
        <div class="col-lg-3 property-section">
            <div class="property-panel-section">
                <div class="property-panel-content">
                    <table id="property" class="property-panel-table" title="Properties" style="width: 100%">
                        <tr style="height: 50px">
                            <td style="width: 50%">
                                <div>Series Type:</div>
                            </td>
                            <td style="width: 50%;">
                                <ejs-dropdownlist id="serieschange" dataSource= "@ViewBag.select" change="seriesChange" value="Polar" popupHeight="220px"></ejs-dropdownlist>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
    <script>
    @*custom code start*@
        window.onChartLoad = function (args) {
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast'));
        }
    @*custom code end*@    
        function seriesChange() {
            var chart = document.getElementById('container').ej2_instances[0];
            chart.series[0].type = this.value;
            chart.series[1].type = this.value;
            chart.series[2].type = this.value;            
            chart.refresh();
        }
    </script>
@*custom code start*@
<style>
    #control-container {
        padding: 0px !important;
    }
</style>
@*custom code end*@
    }
    @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Area in ASP.NET Core Chart control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <p>
        This sample demonstrates polar series with area type for average sales comparison of products in recent year.  The switching between polar and radar series can be done by using <code>Series Type</code> in property panel.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the area type charts. Similar to line type series, but the area
        get closed and filled with series color. You can use <code>border</code>, <code>fill</code> properties to
        customize the area. <code>marker</code> and <code>dataLabel</code> are used to represent individual data and its
        value. Legend is enabled in this example with series type shape.
    </p>
    <br>
    
    <p>
        More information on the Polar series can be found in this
        <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-axis.html#valuetype-valuetype">documentation section</a>.
    </p>
}
@section Title{
                    <title>ASP.NET Core Chart Area Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Area in ASP.NET Core Chart Control</h1>
                }