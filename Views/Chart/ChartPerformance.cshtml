@using Syncfusion.EJ2
@section ControlsSection{
  <div class="col-lg-9 control-section">
        <div id="container" align="center">
            <ejs-chart id="Chart" load="window.onChartLoad"
                       loaded="onChartLoaded" enableCanvas="true">
                <e-chart-primaryxaxis >
                    <e-majorgridlines color="transparent"></e-majorgridlines>
                </e-chart-primaryxaxis>
                <e-chart-legendsettings visible="false">
                </e-chart-legendsettings>
                <e-series-collection>
                    <e-series name="Series1" xName="x" yName="y" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Line">
                    </e-series>
                </e-series-collection>
            </ejs-chart>
        </div>
    </div>
    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tr style="height: 50px">
                <td id="button-control" style="width: 50%">
                    <ejs-button id="button" content="Load 100K Points" cssClass="e-info" isPrimary="true"></ejs-button>
                </td>
            </tr>
            <tr style="height: 50px">
                <td style="width: 30%">
                    <div>Time Taken</div>
                </td>
                <td style="width: 70%;">
                    <div>
                        <span id="performanceTime"></span>
                    </div>
                </td>
            </tr>
        </table>
    </div>
    <script src="~/scripts/chart/financial-data.js"></script>
    <script>
    @*custom code start*@
        window.onChartLoad = function (args) {
            var selectedTheme = location.hash.split("/")[1];
            selectedTheme = selectedTheme ? selectedTheme : "Material";
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast'));
        };
    @*custom code end*@    
        document.getElementById("button").onclick = () => {
            var series1 = [];
            var point1;
            var value = 0;
            var i;
            for (i = 0; i < 100000; i++) {
                value += (Math.random() * 10 - 5);
                point1 = { x: i, y: value };
                series1.push(point1);
            }
            window.dt1 = new Date().getTime();
            Chart.ej2_instances[0].series[0].animation.enable = false;
            Chart.ej2_instances[0].series[0].dataSource = series1;
            Chart.ej2_instances[0].series[0].xName = 'x';
            Chart.ej2_instances[0].series[0].yName = 'y';
            Chart.ej2_instances[0].series[0].marker.visible = false;
            Chart.ej2_instances[0].refresh();
        };
        function onChartLoaded(args) {
            var dt2;
            dt2 = new Date().getTime();
            document.getElementById('performanceTime').innerHTML = (dt2 - window.dt1) + 'ms';
        };
    </script>
}
@*custom code start*@
@section Scripts {

}

<style>
    #control-container {
        padding: 0px !important;
    }

    .e-info {
        text-transform: none !important;
    }
</style>
@section Meta{
                    <meta name="description" content="This example demonstrates the Chart Performance in ASP.NET Core Chart control. Explore here for more details."/>
                }

@*custom code end*@

@section ActionDescription{
    <p>
        This sample demonstrates the performance of EJ2 chart to render 100K points in canvas mode.
    </p>
}
@section Description{
    <p>
        Chart includes several data rendering optimizations to achieve the best possible performance when plotting large volumes of data as well as handling high frequency real-time data.In this demo, chart is rendered with 100K points in canvas mode.
    </p>
}
@section Title{
                    <title>ASP.NET Core Chart Chart Performance Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Chart Performance in ASP.NET Core Chart Control</h1>
                }