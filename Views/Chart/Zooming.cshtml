@using Syncfusion.EJ2
@section ControlsSection{
    <div class="control-section" align="center">
        <ejs-chart id="container" title="Sales History of Product X" load=" load">
            <e-chart-primaryxaxis title="Years" valueType="@Syncfusion.EJ2.Charts.ValueType.DateTime" skeleton="yMMM" edgeLabelPlacement="Shift" >
                <e-majorgridlines width="0"></e-majorgridlines>
            </e-chart-primaryxaxis>
            <e-chart-primaryyaxis title="Profit ($)" rangePadding="None" >
                <e-majorticklines width=" 0"></e-majorticklines>
                <e-linestyle width=" 0"></e-linestyle>
            </e-chart-primaryyaxis>
            <e-chart-legendsettings visible="false"></e-chart-legendsettings>
            <e-chart-zoomsettings enableMouseWheelZooming="true" enableScrollbar="true" enablePinchZooming="true" enableSelectionZooming="true" mode="X"></e-chart-zoomsettings>
            <e-series-collection>
                <e-series name="Warmest" xName="x" width="2" opacity="1" yName="y" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Area">
                </e-series>
            </e-series-collection>
            <e-chart-chartarea>
                <e-chartarea-border width="0"></e-chartarea-border>
            </e-chart-chartarea>
        </ejs-chart>
    </div>
    <svg style="height: 0">
        <defs>
            <linearGradient id="material-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
                <stop offset="0"></stop>
                <stop offset="1"></stop>
            </linearGradient>
            <linearGradient id="fabric-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
                <stop offset="0"></stop>
                <stop offset="1"></stop>
            </linearGradient>
            <linearGradient id="bootstrap-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
                <stop offset="0"></stop>
                <stop offset="1"></stop>
            </linearGradient>
            <linearGradient id="bootstrap4-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
                <stop offset="0"></stop>
                <stop offset="1"></stop>
            </linearGradient>
            <linearGradient id="highcontrast-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
                <stop offset="0"></stop>
                <stop offset="1"></stop>
            </linearGradient>
            <linearGradient id="tailwind-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
                <stop offset="0"></stop>
                <stop offset="1"></stop>
            </linearGradient>
            <linearGradient id="bootstrap5-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
                <stop offset="0"></stop>
                <stop offset="1"></stop>
            </linearGradient>
            <linearGradient id="material-dark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
                <stop offset="0"></stop>
                <stop offset="1"></stop>
            </linearGradient>
            <linearGradient id="fabric-dark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
                <stop offset="0"></stop>
                <stop offset="1"></stop>
            </linearGradient>
            <linearGradient id="bootstrap-dark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
                <stop offset="0"></stop>
                <stop offset="1"></stop>
            </linearGradient>
            <linearGradient id="tailwind-dark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
                <stop offset="0"></stop>
                <stop offset="1"></stop>
            </linearGradient>
            <linearGradient id="bootstrap5-dark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
                <stop offset="0"></stop>
                <stop offset="1"></stop>
            </linearGradient>
            <linearGradient id="fluent-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
                <stop offset="0"></stop>
                <stop offset="1"></stop>
            </linearGradient>
            <linearGradient id="fluent-dark-gradient-chart" style="opacity: 0.75" class="chart-gradient" x1="0" x2="0" y1="0" y2="1">
                <stop offset="0"></stop>
                <stop offset="1"></stop>
            </linearGradient>
        </defs>
    </svg>
    <script src="~/scripts/chart/financial-data.js"></script>
    <script>
        var selectedTheme = location.hash.split('/')[1];
        selectedTheme = selectedTheme ? selectedTheme : 'Material';
        var theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');
        var zoomthemes = ['bootstrap5', 'bootstrap5dark', 'tailwind', 'tailwinddark', 'material', 'materialdark', 'bootstrap4', 'bootstrap', 'bootstrapdark', 'fabric', 'fabricdark', 'highcontrast', 'fluent', 'fluentdark'];
        var borderColor = ['#262E0B', '#5ECB9B', '#5A61F6', '#8B5CF6', '#00bdae', '#9ECB08', '#a16ee5', '#a16ee5', '#a16ee5', '#4472c4', '#4472c4', '#79ECE4', '#614570', '#8AB113'];
        var fill = 'url(#' + selectedTheme + '-gradient-chart)';
        function load(args) {
                @*custom code start*@
            var indexedTheme = location.hash.split('/')[1];
            indexedTheme = indexedTheme ? indexedTheme : 'Material';
            args.chart.theme = (indexedTheme.charAt(0).toUpperCase() + indexedTheme.slice(1).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast'));
                @*custom code end*@
            args.chart.series[0].border = { width: 0.5, color: borderColor[zoomthemes.indexOf(args.chart.theme.toLowerCase())] };
            args.chart.series[0].fill = fill;
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "60%";

            //series dataSource
            var series1 = [];
            var point1;
            var value = 80;
            var i;
            for (i = 1; i < 500; i++) {
                if (Math.random() > 0.5) {
                    value += Math.random();
                }
                else {
                    value -= Math.random();
                }
                point1 = { x: new Date(1950, i + 2, i), y: value.toFixed(1) };
                series1.push(point1);
            }
            args.chart.series[0].dataSource = series1;
        }
    </script>
        @*custom code start*@
    <style>
        #material-gradient-chart stop {
            stop-color: #00bdae;
        }

        #fabric-gradient-chart stop {
            stop-color: #4472c4;
        }

        #bootstrap-gradient-chart stop {
            stop-color: #a16ee5;
        }

        #bootstrap4-gradient-chart stop {
            stop-color: #a16ee5;
        }

        #highcontrast-gradient-chart stop {
            stop-color: #79ECE4;
        }

        #tailwind-gradient-chart stop {
            stop-color: #5A61F6;
        }

        #bootstrap5-gradient-chart stop {
            stop-color: #262E0B;
        }

        #material-dark-gradient-chart stop {
            stop-color: #9ECB08;
        }

        #fabric-dark-gradient-chart stop {
            stop-color: #4472c4;
        }

        #bootstrap-dark-gradient-chart stop {
            stop-color: #a16ee5;
        }

        #tailwind-dark-gradient-chart stop {
            stop-color: #8B5CF6;
        }

        #bootstrap5-dark-gradient-chart stop {
            stop-color: #5ECB9B;
        }

        #fluent-gradient-chart stop {
            stop-color: #614570;
        }

        #fluent-dark-gradient-chart stop {
             stop-color: #8AB113;
        }

        .chart-gradient stop[offset="0"] {
            stop-opacity: 0.75;
        }

        .chart-gradient stop[offset="1"] {
            stop-opacity: 0;
        }

        #control-container {
            padding: 0px !important;
        }
    </style>
    @*custom code end*@
}
    @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Zooming and Panning in ASP.NET Core Chart control. Explore here for more details."/>
                }
    @*custom code end*@
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample illustrates zooming feature in chart. The change can be zoomed by pinching or by mouse wheel.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>This sample demonstrates the zooming and panning behavior in chart.</p>
        <ul>
            <li>Click and drag the mouse on a chart area to enable selection zooming.</li>
            <li>Hover the mouse on the toolbar at the top right corner of chart area to switch between zooming and panning.</li>
            <li>Pinch in and pinch out the chart area to zoom in or zoom out the chart in touch enabled devices.</li>
            <li>Touch and drag to pan the chart.</li>
            <li>Double tap to reset the zoomed chart.</li>
        </ul>
        <p>Chart component supports four types of zooming which can be set using the <code>enableSelectionZooming</code>, <code>enablePinchZooming</code>, <code>enableMouseWheelZooming</code>, and <code>enableDeferredZooming</code> properties.</p>
        <p>
            Chart supports two mode of zooming which can be set using the 
            <code>
                <a target="_blank"
                   href="http://ej2.syncfusion.com/react/documentation/chart/api-zoomSettings.html#mode-string">mode</a>
            </code> property.
        </p>
        <ul>
            <li><code>XY</code> - Zoom the chart with respect to both the axis.</li>
            <li><code>X</code> - Zoom the chart with respect to horizontal axis.</li>
            <li><code>Y</code> - Zoom the chart with respect to vertical axis.</li>
        </ul>
      
        <p>
            More information on the Zooming can be found in this &nbsp;
            <a target="_blank" href="http://ej2.syncfusion.com/react/documentation/chart/api-zoomSettings.html#properties">documentation section</a>.
        </p>
    </div>
}
@section Title{
                    <title>ASP.NET Core Chart Zooming and Panning Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Zooming and Panning in ASP.NET Core Chart Control</h1>
                }