@using Syncfusion.EJ2
@section ControlsSection{
    <div class="control-section">
        <div id="container" align='center'>
            <ejs-chart id="lineContainer"  load="window.onChartLoad" title="Fruit Consumption" enableSideBySidePlacement="false">
                <e-chart-tooltipsettings enable="true" shared="true">
                </e-chart-tooltipsettings>
                <e-chart-primaryxaxis valueType="Category" interval=1>
                     <e-majorgridlines width="0"></e-majorgridlines>
                </e-chart-primaryxaxis>
                <e-chart-primaryyaxis>
                    <e-majorgridlines width="0"></e-majorgridlines>
                    <e-majorticklines width="0"></e-majorticklines>
                    <e-linestyle width="0"></e-linestyle>
                    <e-labelstyle color="transparent"></e-labelstyle>
                </e-chart-primaryyaxis>
                <e-chart-chartarea>
                    <e-chartarea-border width="0"></e-chartarea-border>
                </e-chart-chartarea>
                <e-series-collection>
                    <e-series dataSource="ViewBag.dataSource" xName="x" yName="yValue" name="Total" width=2 columnWidth=0.5 type="@Syncfusion.EJ2.Charts.ChartSeriesType.Column">
                        <e-series-marker>
                            <e-series-datalabel visible="true" name="text" position="Top">
                                <e-font fontWeight="600" color="#ffffff"></e-font>
                            </e-series-datalabel>
                        </e-series-marker>
                    </e-series>
                    <e-series dataSource="ViewBag.dataSource" xName="x" yName="yValue1" name="Apple" width=2 columnWidth=0.4 type="@Syncfusion.EJ2.Charts.ChartSeriesType.Column">
                        <e-series-marker>
                            <e-series-datalabel visible="true" position="Top">
                                <e-font fontWeight="600" color="#ffffff"></e-font>
                            </e-series-datalabel>
                        </e-series-marker>
                    </e-series>
                    <e-series dataSource="ViewBag.dataSource" xName="x" yName="yValue2" name="Orange" width=2 columnWidth=0.3 type="@Syncfusion.EJ2.Charts.ChartSeriesType.Column">
                        <e-series-marker>
                            <e-series-datalabel visible="true" position="Top">
                                <e-font fontWeight="600" color="#ffffff"></e-font>
                            </e-series-datalabel>
                        </e-series-marker>
                    </e-series>
                    <e-series dataSource="ViewBag.dataSource" xName="x" yName="yValue3" name="Grapes" width=2 columnWidth=0.2 type="@Syncfusion.EJ2.Charts.ChartSeriesType.Column">
                        <e-series-marker>
                            <e-series-datalabel visible="true" position="Top">
                                <e-font fontWeight="600" color="#ffffff"></e-font>
                            </e-series-datalabel>
                        </e-series-marker>
                    </e-series>
                </e-series-collection>
            </ejs-chart>
        </div>
    </div>
    @*custom code start*@
    <script>
        window.onChartLoad = function (args) {
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast'));
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "60%";
        }
    </script>
    @*custom code end*@
}
@*custom code start*@
@section Scripts {

}

<style>
    #control-container {
        padding: 0px !important;
    }
</style>
@*custom code end*@
@section ActionDescription{
    <p>
        This sample illustrates four column series. Each column is rendered with different column width and it is placed  behind to another one.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the column type charts. Column type charts are used for comparing
        the frequency, count, total or average of data in different categories. You can use <code>border</code>,
        <code>fill</code> properties to customize the vertical rect. <code>dataLabel</code> is used to represent individual
        data and its value. You can enable side by side position by <code>enableSideBySidePlacement</code> property.
    </p>
    <p>
        Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>
    <br>
   
    <p>
        More information on the column series can be found in this
        <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype">documentation section</a>.
    </p>
}
@section Title{
                 <title>ASP.NET Core Chart Column Placement Example - Syncfusion Demos </title>
             }
@section Meta{
                <meta name="description" content="This example demonstrates the Column Placement in ASP.NET Core Chart control. Explore here for more details."/>
            }
@section Header{
                <h1 class='sb-sample-text'>Example of Column Placement in ASP.NET Core Chart Control</h1>
            }