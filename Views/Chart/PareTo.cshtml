@using Syncfusion.EJ2
@section ControlsSection{

    <div class="control-section">
        <div id="container" align='center'>
            <ejs-chart id="lineContainer" load="window.onChartLoad" title="Defect vs Frequency">
                <e-chart-tooltipsettings enable="true" shared="true">
                </e-chart-tooltipsettings>
                <e-chart-chartarea>
                    <e-chartarea-border width="0"></e-chartarea-border>
                </e-chart-chartarea>
                <e-chart-legendsettings visible="false">
                </e-chart-legendsettings>
                <e-chart-primaryxaxis title="Defects" interval="1" valueType="Category">
                    <e-majorgridlines width="0"></e-majorgridlines>
                </e-chart-primaryxaxis>
                <e-chart-primaryyaxis title="Frequency" minimum="0" maximum="150" interval="30">
                    <e-majorticklines width="0"></e-majorticklines>
                    <e-linestyle width="0"></e-linestyle>
                </e-chart-primaryyaxis>
                <e-series-collection>
                    <e-series dataSource="ViewBag.dataSource" width="2" name="Defect" xName="x" yName="y" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Pareto">
                        <e-series-marker visible="true" height="10" width="10"></e-series-marker>
                    </e-series>
                </e-series-collection>
            </ejs-chart>
        </div>
    </div>
        @*custom code start*@
    <script>
        window.onChartLoad = function (args) {
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast'));
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "60%";
        }
    </script>
        @*custom code end*@
}
    @*custom code start*@
@section Scripts {

}

<style>
    #control-container {
        padding: 0px !important;
    }
</style>
@section Meta{
                    <meta name="description" content="This example demonstrates the Pareto Chart in ASP.NET Core Chart control. Explore here for more details."/>
                }
    @*custom code end*@
@section ActionDescription{
    <p>
        This sample illustrates a pareto chart with line and column series. Trackball shows the information about the data point
        closest to the mouse.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the pareto charts. Pareto charts are used to find the cumulative
        values of of data in different categories. You can use <code>border</code>,
        <code>fill</code> properties to customize the vertical rectangle. <code>dataLabel</code> is used to represent individual
        data and its value.
    </p>
    <p>
        Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>
    <br>

    <p>
        More information on the series can be found in this
        <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype">documentation section</a>.
    </p>
}
@section Title{
                 <title>ASP.NET Core Chart Pareto Chart Example - Syncfusion Demos </title>
             }
@section Header{
                <h1 class='sb-sample-text'>Example of Pareto Chart in ASP.NET Core Chart Control</h1>
            }