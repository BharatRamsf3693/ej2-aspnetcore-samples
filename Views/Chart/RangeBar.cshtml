@using Syncfusion.EJ2
@section ControlsSection{
    @{
        var border = new Syncfusion.EJ2.Charts.ChartBorder { Width = 0, Color = "transparent" };
        var line = new
        {
            width = 0.0001

        };

    }
<div class="control-section">
    <div id="container" align='center'>
        <ejs-chart id="lineContainer"  load="window.onChartLoad" title="Temperature Variation"
                  isTransposed="true">
            <e-chart-chartarea>
                <e-chartarea-border width="0"></e-chartarea-border>
            </e-chart-chartarea>
            <e-chart-primaryxaxis valueType="Category" >
                <e-majorgridlines width="0"></e-majorgridlines>
            </e-chart-primaryxaxis>
            <e-chart-primaryyaxis edgeLabelPlacement="Shift" labelFormat = "{value}ËšF">
                <e-majorticklines width="0"></e-majorticklines>
                <e-linestyle width="0"></e-linestyle>
            </e-chart-primaryyaxis>
            <e-series-collection>
                <e-series dataSource="ViewBag.dataSource" xName="x" high="high" low="low" name="California" width=2 type="@Syncfusion.EJ2.Charts.ChartSeriesType.RangeColumn"></e-series>
                <e-series dataSource="ViewBag.dataSource1" xName="x" high="high" low="low" name="Colorado" width=2 type="@Syncfusion.EJ2.Charts.ChartSeriesType.RangeColumn"></e-series>
            </e-series-collection>
            <e-chart-tooltipsettings enable="true"></e-chart-tooltipsettings>
        </ejs-chart>
    </div>
    @*custom code start*@
    <script>
        window.onChartLoad = function (args) {
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast'));
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "60%";
        }
    </script>
    @*custom code end*@
</div>
}
@*custom code start*@
@section Scripts {
    
}

<style>
    #control-container {
        padding: 0px !important;
    }
</style>
@section Meta{
                    <meta name="description" content="This example demonstrates the Range Bar in ASP.NET Core Chart control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <p>
        This sample illustrates a range column series by inversing its X and Y  Axes. Tooltip shows the information about the data points.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the range column type chart with inverted manner. You can use <code>border</code>,
        <code>fill</code> properties to customize the columns. <code>dataLabel</code> are used to represent individual data
        and its value.
    </p>
    <p>
        Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
    </p>

    <p>
        More information on the range column series can be found in this
        <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype">documentation section</a>.
    </p>
}
@section Title{
                 <title>ASP.NET Core Chart Range Bar Example - Syncfusion Demos </title>
             }
@section Header{
                <h1 class='sb-sample-text'>Example of Range Bar in ASP.NET Core Chart Control</h1>
            }