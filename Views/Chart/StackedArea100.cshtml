@using Syncfusion.EJ2
@section ControlsSection{
     <div class="control-section">
        <div id="container" align='center'>
            <ejs-chart id="lineContainer"  load="window.onChartLoad" title="Trend in Sales of Ethical Produce">
                <e-chart-chartarea>
                    <e-chartarea-border width="0"></e-chartarea-border>
                </e-chart-chartarea>
                <e-chart-primaryxaxis labelFormat="y" intervalType="Years" edgeLabelPlacement="Shift" valueType="DateTime">
                    <e-majorgridlines width="0"></e-majorgridlines>
                </e-chart-primaryxaxis>
                <e-chart-primaryyaxis title="Spends" interval="20" rangePadding="None">
                    <e-majorgridlines width="0"></e-majorgridlines>
                </e-chart-primaryyaxis>
                <e-series-collection>
                    <e-series dataSource="ViewBag.dataSource" name="Organic" xName="x" opacity=1 width=2 yName="y" type="@Syncfusion.EJ2.Charts.ChartSeriesType.StackingArea100"></e-series>
                    <e-series dataSource="ViewBag.dataSource1" name="Fair-trade" xName="x" opacity=1 width=2 yName="y" type="@Syncfusion.EJ2.Charts.ChartSeriesType.StackingArea100"></e-series>
                    <e-series dataSource="ViewBag.dataSource2" name="Veg Alternatives" xName="x" opacity=1 width=2 yName="y" type="@Syncfusion.EJ2.Charts.ChartSeriesType.StackingArea100"></e-series>
                    <e-series dataSource="ViewBag.dataSource3" name="Others" xName="x" opacity=1 width=2 yName="y" type="@Syncfusion.EJ2.Charts.ChartSeriesType.StackingArea100"></e-series>
                </e-series-collection>
            </ejs-chart>
        </div>
        <div style="float: right;margin-right: 10px; margin-top: -5px">
            Source:
            <a href="https://www.gov.uk/" target="_blank">www.gov.uk</a>
        </div>
    </div>
    @*custom code start*@
    <script>
        window.onChartLoad = function (args) {
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast'));
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "60%";
        }
    </script>
    @*custom code end*@
}
@*custom code start*@
@section Scripts {

}

<style>
    #control-container {
        padding: 0px !important;
    }
</style>
@section Meta{
                    <meta name="description" content="This example demonstrates the 100% Stacked Area in ASP.NET Core Chart control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <p>
        Percentage of sales for four ethical products are visualized with default 100% stacked area series in chart.
        Legend in the sample shows the information about the series.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the 100% stacking area type charts. You can use <code>fill</code> properties to customize the 100% stacking area.
    </p>
    <br>
 
    <p>
        More information on the stacking area series can be found in this
        <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype">documentation section</a>.
    </p>
}
@section Title{
                    <title>ASP.NET Core Chart 100% Stacked Area Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of 100% Stacked Area in ASP.NET Core Chart Control</h1>
                }