@using Syncfusion.EJ2
@section ControlsSection{
     <div class="control-section">
        <div id="container" align='center'>
            <ejs-chart id="lineContainer" load="window.onChartLoad" title="Average Sales Comparison">
                <e-chart-chartarea>
                    <e-chartarea-border width="0"></e-chartarea-border>
                </e-chart-chartarea>
                <e-chart-primaryxaxis valueType="DateTime" labelFormat="y" intervalType= "Years" edgeLabelPlacement="Shift">
                    <e-majorgridlines width="0"></e-majorgridlines>
                </e-chart-primaryxaxis>
                <e-chart-primaryyaxis title = "Revenue in Millions" interval=1  labelFormat="{value}M">
                    <e-linestyle width="0"></e-linestyle>
                    <e-majorticklines width="0"></e-majorticklines>
                </e-chart-primaryyaxis>
                <e-series-collection>
                    <e-series dataSource="ViewBag.dataSource" name="Product A" xName="xValue" opacity=0.5 width=2 yName="yValue" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Area">
                        <e-series-border color="transparent"></e-series-border>
                    </e-series>
                    <e-series dataSource="ViewBag.dataSource" name="Product B" xName="xValue" opacity=0.5 width=2 yName="yValue1" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Area">
                        <e-series-border color="transparent"></e-series-border>
                    </e-series>
                </e-series-collection>
            </ejs-chart>
        </div>
    </div>
    @*custom code start*@
    <script>
        window.onChartLoad = function (args) {
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast'));
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "60%";
        }
    </script>
        @*custom code end*@
}
    @*custom code start*@
@section Scripts {

}

<style>
    #control-container {
        padding: 0px !important;
    }
</style>
@section Meta{
                    <meta name="description" content="This example demonstrates the Area in ASP.NET Core Chart control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <p>
        This sample visualizes the data about average sales comparison of two products by using default area series in the chart.
        Legend in the sample shows the information about the series.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the area type charts. Similar to line type series, but the area get closed and filled with series color.
        You can use <code>border</code>, <code>fill</code> properties to customize the area. <code>marker</code> and <code>dataLabel</code> are used to represent individual data and its value.
        Legend is enabled in this example with series type shape.
    </p>
    <br>
    <p>
        More information on the area series can be found in this
        <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype">documentation section</a>.
    </p>
}
@section Title{
                 <title>ASP.NET Core Chart Area Example - Syncfusion Demos </title>
             }
@section Header{
                <h1 class='sb-sample-text'>Example of Area in ASP.NET Core Chart Control</h1>
            }