@using Syncfusion.EJ2
@section ControlsSection{
    <div class="control-section" align='center'>
        <ejs-accumulationchart id="container" title="Project Cost Breakdown" load="load">
            <e-accumulationchart-legendsettings visible="true" position="Top">
            </e-accumulationchart-legendsettings>
            <e-accumulationchart-tooltipsettings enable="false"></e-accumulationchart-tooltipsettings>
            <e-accumulation-series-collection>
                <e-accumulation-series dataSource="ViewBag.dataSource" xName="xValue" yName="yValue" radius="70%" innerRadius="40%" name="Project" explode=true explodeOffset="10%" explodeIndex=3>
                    <e-accumulationseries-datalabel visible="true" name="text">
                        <e-font fontWeight="600" color="white"></e-font>
                    </e-accumulationseries-datalabel>
                </e-accumulation-series>
            </e-accumulation-series-collection>
        </ejs-accumulationchart>
    </div>
    @*custom code start*@
    <script>
        function load(args) {
            var indexedTheme = location.hash.split('/')[1];
            indexedTheme = indexedTheme ? indexedTheme : 'Material';
            args.accumulation.theme = (indexedTheme.charAt(0).toUpperCase() + indexedTheme.slice(1).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast'));
        }
    </script>
    @*custom code end*@
}
@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Donut in ASP.NET Core Chart control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample illustrates an educational instituteâ€™s revenue by using the pie with legend series. The legend will be displayed at right side of the chart.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p> In this example, you can see how to render doughnut chart. You can use the <code>radius</code> and <code>innerRadius</code> properties to render the doughnut and also use the <code>border</code>, <code>fill</code> properties to customize the point. <code>dataLabel</code> is used to represent individual data and its value.</p>
        <p> <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover a point or tap on a point in touch enabled devices.</p>
        
    </div>
}
@section Title{
                    <title>ASP.NET Core Chart Donut Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Donut in ASP.NET Core Chart Control</h1>
                }