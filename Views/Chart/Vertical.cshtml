@using Syncfusion.EJ2
@section ControlsSection{
    <script src="~/scripts/chart/financial-data.js"></script>

    <div class="control-section" align="center">
        <ejs-chart id="container" load="load" title="Indonesia - Seismograph Analysis" isTransposed="true">
            <e-chart-chartarea>
                <e-chartarea-border width="0"></e-chartarea-border>
            </e-chart-chartarea>
            <e-chart-primaryxaxis title="Time (s)" >
                <e-majorgridlines width="0"></e-majorgridlines>
            </e-chart-primaryxaxis>
            <e-chart-legendsettings visible="false"></e-chart-legendsettings>
            <e-chart-primaryyaxis minimum="-15" maximum="15" interval="5" title="Velocity (m/s)" >
                <e-majorgridlines width="0"></e-majorgridlines>
            </e-chart-primaryyaxis>
            <e-series-collection>
                <e-series xName="x" yName="y" width=2 type="Line" name="Indonesia"></e-series>
            </e-series-collection>
            <e-chart-tooltipsettings enable="true"></e-chart-tooltipsettings>
        </ejs-chart>
    </div>
    <script>

        var load = function (args) {
            @*custom code start*@
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast'));
            args.chart.width = ej.base.Browser.isDevice ? "100%" : "60%";
            @*custom code end*@
            args.chart.series[0].dataSource = liveData(args.chart.series[0].dataSource, args.chart.series[0]);
        };
        var interval;



        function liveData(data, series) {
            var newData = [];
            for (var count = 0; count < 350; count++) {
                if (count > 350) {
                    clearInterval(interval);
                }
                else if (count > 300) {
                    newData.push({ x: count, y: getRandomArbitrary(0, 0) });
                }
                else if (count > 250) {
                    newData.push({ x: count, y: getRandomArbitrary(-2, 1) });
                }
                else if (count > 180) {
                    newData.push({ x: count, y: getRandomArbitrary(-3, 2) });
                }
                else if (count > 100) {
                    newData.push({ x: count, y: getRandomArbitrary(-7, 6) });
                }
                else if (count < 50) {
                    newData.push({ x: count, y: getRandomArbitrary(-3, 3) });
                }
                else {
                    newData.push({ x: count, y: getRandomArbitrary(-9, 9) });
                }
            }
            return newData;
        }
        function getRandomArbitrary(min, max) {
            return Math.random() * (max - min) + min;
        }
        function getXValue(data) {
            return data.length;
        }
    </script>
}
@*custom code start*@
@section Scripts {
}

<style>
    #control-container {
        padding: 0px !important;
    }
</style>
@section Meta{
                    <meta name="description" content="This example demonstrates the Vertical in ASP.NET Core Chart control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <p>
        This sample illustrates the vertical chart by changing the orientation of x-axis to vertical and y-axis to horizontal.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the vertical type charts.
        To render a chart in vertical manner, you can use <code>isTransposed</code> in chart.
    </p>
    <br>
    <p>
        More information on the vertical chart
        <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart">documentation section</a>.
    </p>
}
@section Title{
                    <title>ASP.NET Core Chart Vertical Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Vertical in ASP.NET Core Chart Control</h1>
                }