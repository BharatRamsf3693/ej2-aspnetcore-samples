@using Syncfusion.EJ2
@section ControlsSection{
    <div class="control-section col-lg-9" align='center'>
        <ejs-accumulationchart id="container" title="Top populated countries in 2017" load="load">
            <e-accumulationchart-tooltipsettings enable="true" format="${point.x} : <b>${point.y}</b>"></e-accumulationchart-tooltipsettings>
            <e-accumulationchart-legendsettings visible="false">
            </e-accumulationchart-legendsettings>
            <e-accumulation-series-collection>
                <e-accumulation-series dataSource="ViewBag.dataSource" xName="xValue" yName="yValue" type="@Syncfusion.EJ2.Charts.AccumulationType.Funnel" neckWidth="15%" neckHeight="18%">
                    <e-accumulationseries-datalabel visible="true" name="text" position="Outside">
                        <e-connectorstyle length="6%"></e-connectorstyle>
                    </e-accumulationseries-datalabel>
                </e-accumulation-series>
            </e-accumulation-series-collection>
        </ejs-accumulationchart>
    </div>
    <div class="col-lg-3 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tbody>
                <tr style="height: 50px">
                    <td style="width: 40%">
                        <div>
                            Neck Width
                        </div>
                    </td>
                    <td style="width: 40%;">
                        <div data-role="rangeslider">
                            <input type="range" name="range-min" id="chartneckwidth" value="15" min="0" max="50" style="width:90%">
                        </div>
                    </td>
                    <td style="width: 30%;">
                        <p id="neckWidth" style="font-weight: normal;padding-top:15px">15%</p>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td style="width: 30%">
                        <div>
                            Neck Height
                        </div>
                    </td>
                    <td style="width: 40%;">
                        <div data-role="rangeslider">
                            <input type="range" name="range-min" id="chartneckheight" value="18" min="0" max="50" style="width:90%">
                        </div>
                    </td>
                    <td style="width: 30%;">
                        <p id="neckHeight" style="font-weight: normal;padding-top:15px">18%</p>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <script>
        function neckWidth(value) {
            var chart = document.getElementById("container").ej2_instances[0];
            chart.series[0].neckWidth = value + '%';
            document.getElementById('neckWidth').innerHTML = value + '%';
            chart.removeSvg();
            chart.refreshSeries();
            chart.refreshChart();
        }
       
        document.getElementById('chartneckwidth').onpointermove = document.getElementById('chartneckwidth').ontouchmove =
            document.getElementById('chartneckwidth').onchange = (e) => {
                neckWidth(+(document.getElementById('chartneckwidth')).value);
            };
        function neckHeight(value) {
            var chart = document.getElementById("container").ej2_instances[0];
            chart.series[0].neckHeight = value + '%';
            document.getElementById('neckHeight').innerHTML = value + '%';
            chart.removeSvg();
            chart.refreshSeries();
            chart.refreshChart();
        }
        
        document.getElementById('chartneckheight').onpointermove = document.getElementById('chartneckheight').ontouchmove =
            document.getElementById('chartneckheight').onchange = (e) => {
                neckHeight(+(document.getElementById('chartneckheight')).value);
            };
            @*custom code start*@
        window.load = function(args) {
            var indexedTheme = location.hash.split('/')[1];
            indexedTheme = indexedTheme ? indexedTheme : 'Material';
            args.accumulation.theme = (indexedTheme.charAt(0).toUpperCase() + indexedTheme.slice(1).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast'));
        }
        @*custom code end*@
    </script>
}
@*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Funnel in ASP.NET Core Chart control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{

    <div id="action-description">
        <p>
            This sample visualizes the population data of different countries using the default funnel series.
            Data label shows the information about the <code>points</code>, and they are arranged smartly
        </p>
    </div>
}
@section Description {
    <div id="description">
        <p> In this example, you can see how to render funnel chart.<code>dataLabel</code> is used to represent individual data and its value. Here, the labels are arranged smartly to avoid overlap.</p>
        <p> <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover a point or tap on a point in touch enabled devices.</p>
        <p><b>Injecting Module</b></p>
        <p>
            Chart component features are segregated into individual feature-wise modules. To use Funnel series, we need to inject
            <code>FunnelSeries</code> module into <code>services</code>.
        </p>
    </div>

}
@section Title{
                 <title>ASP.NET Core Chart Funnel Example - Syncfusion Demos </title>
             }
@section Header{
                <h1 class='sb-sample-text'>Example of Funnel in ASP.NET Core Chart Control</h1>
            }