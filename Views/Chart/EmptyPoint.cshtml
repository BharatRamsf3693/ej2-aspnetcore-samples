@using Syncfusion.EJ2
@section ControlsSection{
    @{
        var Column = "Column";
        var Gap = "Gap";
    }
    <div class="col-lg-8 control-section">
        <div id="container" align='center'>
            <ejs-chart id="emtpyContainer" load="load" title="Annual Product-Wise Profit Analysis">
                <e-chart-tooltipsettings enable="true" enableMarker="false">
                </e-chart-tooltipsettings>
                <e-chart-primaryxaxis valueType="@Syncfusion.EJ2.Charts.ValueType.Category" interval=1>
                    <e-majorgridlines width="0"></e-majorgridlines>
                    <e-majorticklines width="0"></e-majorticklines>
                </e-chart-primaryxaxis>
                <e-chart-primaryyaxis minimum=0 maximum=100 interval=20 labelFormat="{value}%">
                    <e-linestyle width="0"></e-linestyle>
                    <e-majorticklines width="0"></e-majorticklines>
                </e-chart-primaryyaxis>
                <e-chart-chartarea>
                    <e-chartarea-border width="0"></e-chartarea-border>
                </e-chart-chartarea>
                <e-series-collection>
                    <e-series xName="Product" yName="Profit" width=2 type="@Syncfusion.EJ2.Charts.ChartSeriesType.Column">
                        <e-series-marker visible="false" height="7" width="7"></e-series-marker>
                        <e-series-emptypointsettings fill="#e6e6e6" mode="@Syncfusion.EJ2.Charts.EmptyPointMode.Gap"></e-series-emptypointsettings>
                    </e-series>
                </e-series-collection>
            </ejs-chart>
        </div>
    </div>
    <div class="col-lg-4 property-section">
        <table id="property" title="Properties" style="width: 100%;">
            <tr style="height: 50px">
                <td style="width: 50%">
                    <div>
                        Series Type:
                    </div>
                </td>
                <td style="width: 50%;">
                    <ejs-dropdownlist id="seriestype" dataSource="@ViewBag.data" value="Column" change="seriesChange" popupHeight="220px"></ejs-dropdownlist>
                </td>
            </tr>
            <tr style="height: 50px">
                <td style="width: 50%">
                    <div>
                        Empty Point Mode:
                    </div>
                </td>
                <td style="width: 50%;">
                    <ejs-dropdownlist id="emptypointmode" dataSource="@ViewBag.data1" value="Gap" change="modeChange" index="2" popupHeight="220px"></ejs-dropdownlist>
                </td>
            </tr>
        </table>
    </div>
    <script>
        function load(args) {
            @*custom code start*@
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast'));
            args.chart.primaryXAxis.labelRotation = ej.base.Browser.isDevice?'-45':'0';
            @*custom code end*@
            args.chart.dataSource = [
                { Product : "Rice",  Profit : 80 },
                { Product : "Wheat", Profit : null },
                { Product : "Oil",   Profit : 70 },
                { Product : "Corn",  Profit : 60 },
                { Product : "Gram",  Profit : null },
                { Product : "Milk",  Profit : 70 },
                { Product : "Peas",  Profit : 80 },
                { Product : "Fruit", Profit : 60 },
                { Product : "Butter",Profit : null }
            ];
        }
        var seriesChange = function () {
            var seriestype = document.getElementById('seriestype').ej2_instances[0];
            var chart = document.getElementById('emtpyContainer').ej2_instances[0];
            chart.series[0].type = seriestype.value;
            if (seriestype.value === "Spline"){
                   chart.series[0].marker.visible = true;
            }
            else{
                chart.series[0].marker.visible = false;
            }
            chart.refresh();
        }       
                        
        var modeChange = function () {
            var emptymode = document.getElementById('emptypointmode').ej2_instances[0];
            var chart = document.getElementById('emtpyContainer').ej2_instances[0];
            chart.series[0].emptyPointSettings.mode = emptymode.value;
            chart.refresh();
        }     
    </script>
}
@*custom code start*@
@section Scripts {
}

<style>
    #control-container {
        padding: 0px !important;
    }
</style>
@section Meta{
                    <meta name="description" content="This example demonstrates the Empty Points in ASP.NET Core Chart control. Explore here for more details."/>
                }
@*custom code end*@
@section ActionDescription{
    <p>
        This sample illustrates the annual profit by product analysis of an organization with empty point functionality.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure empty points for a chart. Users can customize the empty points using <a target="_blank" href="https://help.syncfusion.com/cr/aspnetcore-js2/Syncfusion.EJ2.Charts.ChartEmptyPointSettingsBuilder.html">ChartEmptyPointSettings</a> in series. Default empty point
        <a target="_blank" href="https://help.syncfusion.com/cr/aspnetcore-js2/Syncfusion.EJ2.Charts.ChartEmptyPointSettings.html#Syncfusion_EJ2_Charts_ChartEmptyPointSettings_Mode">Mode</a> is <b>Gap</b>.
    </p>
    <p>
        <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover over a point or tap on a point in touch-enabled devices.
    </p>
    <p>
        More information about the empty points can be found in this
        <a target="_blank" href="https://ej2.syncfusion.com/aspnetcore/documentation/chart/working-with-data#empty-points">documentation section</a>.
    </p>
}
@section Title{
                    <title>ASP.NET Core Chart Empty Points Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Empty Points in ASP.NET Core Chart Control</h1>
                }