@using Syncfusion.EJ2
@section ControlsSection{
  <div class="control-section" align='center'>
        <ejs-accumulationchart id="container" load="load" enableSmartLabels="true" enableAnimation="false" enableBorderOnMouseMove="false" selectionMode="Point" textRender="textRender">
            <e-accumulationchart-center x="50%" y="50%"></e-accumulationchart-center>
            <e-accumulationchart-tooltipsettings enable="true" format="<b>${point.x}</b><br>Browser Share: <b>${point.y}%</b>" header=""></e-accumulationchart-tooltipsettings>
            <e-accumulationchart-legendsettings visible="true" toggleVisibility="false" maximumLabelWidth="66" textWrap="Wrap">
            </e-accumulationchart-legendsettings>
            <e-accumulation-series-collection>
                <e-accumulation-series dataSource="ViewBag.dataSource" xName="x" yName="y" name="text" explode="false" explodeOffset="10%" explodeIndex="0" startAngle="30" innerRadius="43%" radius="80%">
                    <e-accumulationseries-datalabel name="y" visible="true" position="Inside">
                        <e-font fontWeight="600" color="#ffffff"></e-font>
                        <e-connectorstyle type="Curve" length="20px"></e-connectorstyle>
                    </e-accumulationseries-datalabel>
                </e-accumulation-series>
            </e-accumulation-series-collection>
            <e-accumulationchart-accumulationannotations>
                <e-accumulationchart-accumulationannotation X="52%" Y="50%" region="@Syncfusion.EJ2.Charts.Regions.Series"></e-accumulationchart-accumulationannotation>
            </e-accumulationchart-accumulationannotations>
        </ejs-accumulationchart>
    </div>

    <script>
        var count = 0;
        function load(args) {
            var indexedTheme = location.hash.split('/')[1];
            indexedTheme = indexedTheme ? indexedTheme : 'Material';
            args.accumulation.theme = (indexedTheme.charAt(0).toUpperCase() + indexedTheme.slice(1).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast'));
            args.accumulation.title = ej.base.Browser.isDevice ?  "Browser Market Share" : '';
            args.accumulation.legendSettings.position = ej.base.Browser.isDevice ? 'Bottom' : 'Right';
            args.accumulation.legendSettings.height = ej.base.Browser.isDevice ?  '20%' : '30%';
            args.accumulation.legendSettings.width = ej.base.Browser.isDevice ? '80%' :'20%';
            args.accumulation.annotations[0].properties.content = ej.base.Browser.isDevice ? " " : "<div style='font-Weight:600;font-size:14px'>Browser <br> Market <br> Share</div>";
        }
        
        function getFontSize(width) {
            if (width > 300) {
                return '13px';
            } else if (width > 250) {
                return '8px';
            } else {
                return '6px';
            }
        }
        var textRender = function (args) {
            args.text = args.point.y + ' %';
        };
    </script>
}
}
    @*custom code start*@
@section Meta{
                    <meta name="description" content="This example demonstrates the Pie with Legend in ASP.NET Core Chart control. Explore here for more details."/>
                }
    @*custom code end*@
@section ActionDescription{

    <div id="action-description">
        This sample illustrates the donut series with smooth animation on dynamic update of data. The legend will be displayed at right side of the chart.
    </div>
}
@section Description {
    <div id="description">
        In this example, you can see how to render and configure the pie chart. You can use <code>border</code> and <code>fill</code> properties to customize the pie point. <code>dataLabel</code> is used to represent individual data and its value.
        Here the legend text is wrapped using <code>textWrap</code> property.
    </div>

}
@section Title{
                    <title>ASP.NET Core Chart Pie with Legend Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Pie with Legend in ASP.NET Core Chart Control</h1>
                }