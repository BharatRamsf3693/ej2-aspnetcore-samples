@using Syncfusion.EJ2
@section ControlsSection{
    @{ 
        string valueX = "90%";
    }
    <div class="control-section">
        <div id="container" align="center">
            <ejs-chart id="lineContainer" load="window.onChartLoad" title="Inflation - Consumer Price">
                <e-chart-tooltipsettings enable="true" shared="true" enableAnimation="false">
                </e-chart-tooltipsettings>
                <e-chart-primaryxaxis valueType="DateTime"
                                      labelFormat="y"
                                      intervalType="Years"
                                      edgeLabelPlacement="Shift">
                    <e-majorgridlines width="0"></e-majorgridlines>
                </e-chart-primaryxaxis>
                <e-chart-primaryyaxis labelFormat="{value}mm"
                                      rangePadding="None"
                                      minimum=200
                                      maximum=800
                                      interval=100>
                    <e-linestyle width="0"></e-linestyle>
                    <e-majorticklines width="0"></e-majorticklines>
                </e-chart-primaryyaxis>
                <e-chart-chartarea>
                    <e-chartarea-border width="0"></e-chartarea-border>
                </e-chart-chartarea>
                <e-chart-legendsettings visible="false">
                </e-chart-legendsettings>
                <e-chart-annotations>
                    <e-chart-annotation content="#templateWrap" region="Series" x=valueX y="12%"></e-chart-annotation>
                </e-chart-annotations>
                <e-series-collection>
                    <e-series name="Australia" segmentAxis="Y" xName="XValue" width="2" opacity="1" yName="YValue" type="@Syncfusion.EJ2.Charts.ChartSeriesType.MultiColoredLine" segments="ViewBag.segment">
                        
                    </e-series>
                </e-series-collection>
            </ejs-chart>
        </div>
    </div>
    <script>
            window.onChartLoad = function (args) {
                var selectedTheme = location.hash.split("/")[1];
                var dataValues = [];
                [
                    380, 410, 310, 540, 510, 330, 490, 470, 472, 460, 550, 420, 380, 430, 385, 520, 580, 420, 350, 505,
                    535, 410, 204, 400, 415, 408, 415, 350, 375, 500, 390, 450, 440, 350, 400, 365, 490, 400, 520, 510,
                    395, 380, 404, 400, 500, 390, 610, 380, 390, 420, 440, 570, 600, 380, 410, 405, 480, 320, 420, 440,
                    320, 280, 320, 400, 390, 460, 470, 490, 420, 480, 410, 420, 580, 410, 380, 480, 360, 650, 680, 720,
                    580, 480, 520, 440, 420, 430, 380, 520, 410, 540, 400, 390, 460, 470, 490, 420, 480, 470, 490, 330,
                    520, 480, 580, 590, 600, 310, 480, 500, 400, 508, 480, 460, 700, 705, 480, 410, 480,
                ].map(function (value, index) {
                    dataValues.push({ XValue: new Date(1900 + index, 0, 1), YValue: value });
                });
                args.chart.series[0].dataSource = dataValues;               
                selectedTheme = selectedTheme ? selectedTheme : "Material";
                args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast'));
                args.chart.width = ej.base.Browser.isDevice ? "100%" : "60%";
              
            }
    </script>
    <script id="templateWrap" type="text/x-template">
        <div style="width:80px; padding: 5px;">
            <table style="width: 100%">
                <tr>
                    <td>
                        <div style='width: 10px; height: 10px; background:blue;border-radius: 15px;'></div>
                    </td>
                    <td style="padding-left: 5px;">
                        High
                    </td>
                </tr>
                <tr>
                    <td>
                        <div style='width: 10px; height: 10px; background:green;;border-radius: 15px;'></div>
                    </td>
                    <td style="padding-left: 5px;">
                        Medium
                    </td>
                </tr>
                <tr>
                    <td>
                        <div style='width: 10px; height: 10px; background:red;border-radius: 15px;'></div>
                    </td>
                    <td style="padding-left: 5px;">
                        Low
                    </td>
                </tr>
            </table>
        </div>
    </script>



}

<style>

    #control-container {
        padding: 0px !important;
    }
</style>


@section Meta{
                    <meta name="description" content="This example demonstrates the Line Zone in ASP.NET Core Chart control. Explore here for more details."/>
                }


@section ActionDescription{
    <p>
        This sample visualizes the annual mean rainfall data with multi colored line series in the chart.
        Data points are enhanced with segments and tooltip.
    </p>


}

@section Description{
    <p>
        In this example, you can see how to render and configure the points in a particular range by using <code>MultiColoredLine</code> series type.
        Points under the range can be configured with <code>color</code>, <code>width</code>, and <code>dashArray</code>.
    </p>
    <p>
        Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap a point in touch enabled devices.
    </p>
    <br>



}
@section Title{
                    <title>ASP.NET Core Chart Line Zone Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Line Zone in ASP.NET Core Chart Control</h1>
                }