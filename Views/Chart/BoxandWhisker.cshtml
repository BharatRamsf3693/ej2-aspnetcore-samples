@using Syncfusion.EJ2
@section ControlsSection{
    @{
        var Normal = "Normal";
    }
  <div class="col-lg-9 control-section">
            <ejs-chart id="container" title="Employee Age Group in Various Department"
                       load="window.onChartLoad" pointRender="pointRender">
                <e-chart-primaryxaxis valueType="Category" edgeLabelPlacement="Shift" labelIntersectAction="Trim">
                    <e-majorgridlines width="0"></e-majorgridlines>
                </e-chart-primaryxaxis>
                <e-chart-primaryyaxis minimum="10" maximum="60" interval="10" title="Age">
                    <e-majorgridlines width="0"></e-majorgridlines>
                </e-chart-primaryyaxis>
                <e-chart-tooltipsettings enable="true">
                </e-chart-tooltipsettings>
                <e-chart-legendsettings visible="false">
                </e-chart-legendsettings>
                <e-chart-chartarea>
                    <e-chartarea-border width="0"></e-chartarea-border>
                </e-chart-chartarea>
                <e-series-collection>
                    <e-series dataSource="ViewBag.dataSource" xName="x" yName="y"
                              name="Department" type="@Syncfusion.EJ2.Charts.ChartSeriesType.BoxAndWhisker">
                        <e-series-marker visible="true" height="10" width="10"></e-series-marker>
                    </e-series>
                </e-series-collection>
            </ejs-chart>
        </div>
        <div class="col-lg-3 property-section">
            <table id="property" title="Properties" style="width: 100%">
                <tr style="height: 50px">
                    <td style="width: 50%">
                        <div>
                            Mode:
                        </div>
                    </td>
                    <td style="width: 50%;">
                        <ejs-dropdownlist id="mode" dataSource="@ViewBag.mode" value="Normal" change="modeChange" popupHeight="220px"></ejs-dropdownlist>
                    </td>
                </tr>
                <tr style="height: 50px">
                    <td style="width: 50%">
                        <div>Mean: </div>
                    </td>
                    <td style="width: 50%;">
                        <div>
                            <input type="checkbox" id="mean" checked>
                        </div>
                    </td>
                </tr>
            </table>
        </div>
        <script src="~/scripts/chart/financial-data.js"></script>
        <script type="text/javascript">
        @*custom code start*@
            window.onChartLoad = function (args) {
                var selectedTheme = location.hash.split('/')[1];
                selectedTheme = selectedTheme ? selectedTheme : 'Material';
                args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast'));
            }
        @*custom code end*@
            function pointRender(args) {
                var selectedTheme = location.hash.split('/')[1];
                selectedTheme = selectedTheme ? selectedTheme : 'Material';
                if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {
                    args.fill = window.fabricColors[args.point.index % 10];
                } else if (selectedTheme === 'material') {
                    args.fill = window.materialColors[args.point.index % 10];
                } else if (selectedTheme === 'highcontrast') {
                    args.fill = window.highContrastColors[args.point.index % 10];
                } else if (selectedTheme === 'fluent') {
                   args.fill = window.fluentColors[args.point.index % 10];
                } else if (selectedTheme === 'fluent-dark') {
                   args.fill = window.fluentDarkColors[args.point.index % 10];
                } else {
                    args.fill = window.bootstrapColors[args.point.index % 10];
                }
            }

            function modeChange() {
                var chart = document.getElementById('container').ej2_instances[0];
                chart.series[0].boxPlotMode = this.value;
                chart.series[0].animation.enable = false;
                chart.refresh();

            }
            document.getElementById('mean').onchange = () => {
                var chart = document.getElementById('container').ej2_instances[0];
                var element = document.getElementById('mean');
                chart.series[0].showMean = element.checked;
                chart.series[0].animation.enable = false;
                chart.refresh();
            };
        </script>
    }
    @section ActionDescription{
        <div id="action-description">
            <p>
                This sample visualizes the employeesâ€™ age group in various departments of a country with box and whisker type series in the chart. Mode of box and whisker series can be changed by <code>Mode</code> in property panel. To display the <code>mean</code> value in a series, enable the Mean in the property panel.
            </p>
        </div>
    }
    @section Description{
        <div id="description">
            <p>
                In this example, you can see how to render and configure the box and whisker type charts. Similar to line type series, but
                the area get closed and filled with series color. You can use the <code>border</code> and <code>fill</code> properties
                to customize the area. <code>marker</code> and <code>dataLabel</code> are used to represent individual data and its
                value. Legend is enabled in this example with series type shape.
            </p>
            <br>
            <p>
                More information on this series can be found in this
                <a target="_blank" href="http://ej2.syncfusion.com/documentation/chart/api-series.html#type-chartseriestype">documentation section</a>.
            </p>
        </div>
    }
    @*custom code start*@
    @section Scripts {
    }

    <style>
        #control-container {
            padding: 0px !important;
        }
    </style>
@section Meta{
                    <meta name="description" content="This example demonstrates the Box and Whisker in ASP.NET Core Chart control. Explore here for more details."/>
                }
@*custom code end*@
@section Title{
                    <title>ASP.NET Core Chart Box and Whisker Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Box and Whisker in ASP.NET Core Chart Control</h1>
                }