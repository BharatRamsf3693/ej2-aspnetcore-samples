@using Syncfusion.EJ2
@*@model directive allows you to access the model values*@
@model EJ2CoreSampleBrowser.Controllers.ComboBoxRecord
@section ControlsSection{
    <div class="col-lg-8 control-section">
        <div class="control-wrapper">
            <div style='padding-top:70px;'>
                <ejs-combobox id="datas" dataSource="@Model.RecordList" placeholder="e.g. Item 1" allowFiltering="true" enableVirtualization="true" popupHeight="200px">
                    <e-combobox-fields text="Text" value="ID"></e-combobox-fields>
                </ejs-combobox>
            </div>
        </div>
    </div>
    @*custom code start*@
    <style>
        .control-wrapper {
            margin: 0 auto;
            width: 300px;
        }

        .property-section .right-side {
            padding-left: 10px;
        }

        .property-section .left-side {
            padding: 5px;
            width: 25%
        }
    </style>
    @*custom code end*@
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Virtualization in ASP.NET Core ComboBox control. Explore here for more details."/>
                }
@section ActionDescription{
    <div id="action-description">
        <p>This example demonstrates the virtualization support of the ComboBox. The component has 150 items bound to it; however, when you open the suggestion list, only few items are loaded based on the popup height, and the remaining items are loaded while scrolling.</p> 
    </div>
}
@section Description{
    <div id="description">
          <p>The <code>ComboBox</code> component supports virtualization, which improves UI performance for large amounts of data. To enable virtualization, set the <code>enableVirtualization</code> property to true. When virtualization is enabled, ComboBox doesn't render the entire suggestion data source on initial component rendering. It loads the N number of items in the popup on initial rendering and the remaining set number of items will load while scrolling.
        Virtualization works with both local and remote data.</p>
    </div>
}
@section Title{
                    <title>ASP.NET Core ComboBox Virtualization Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Virtualization in ASP.NET Core ComboBox Control</h1>
                }