@using Syncfusion.EJ2;
@section Meta{
                    <meta name="description" content="This example demonstrates the Direction Compass in ASP.NET Core CircularGauge control. Explore here for more details."/>
                }
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample illustrates how to make a direction compass by using the features in gauge.
            Color of the needle and direction labels can be customized by using options.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            Circular gauge can be customized as per the user requirement.
            In this example, a direction compass has been depicted by adding <code>needles</code> and by customizing the <code>labels</code> to show the direction.
        </p>
        <p>
            More information on the needle and labels can be found in this
            <a target="_blank" href="http://ej2.syncfusion.com/documentation"> documentation section</a>.
        </p>
    </div>
}
@section ControlsSection{
@{ 
    var labelFont = new Syncfusion.EJ2.CircularGauge.CircularGaugeFont { FontFamily = "Segoe UI", Opacity = 1, Size = "13px", FontWeight = "Regular" };
}
    <div class="col-md-8 control-section">
        <div class="content-wrapper">
            <ejs-circulargauge id="circular" axisLabelRender="axisLabelRender" load="gaugeload">
                <e-circulargauge-axes>
                    <e-circulargauge-axis startAngle="0" endAngle="360" minimum="0" maximum="8" radius="70%">
                        <e-axis-linestyle width="8" ></e-axis-linestyle>
                        <e-axis-labelstyle autoAngle="true" hiddenLabel="@Syncfusion.EJ2.CircularGauge.HiddenLabel.Last" font="labelFont">
                        </e-axis-labelstyle>
                        <e-axis-majorticks height="15" interval="1" ></e-axis-majorticks>
                        <e-axis-minorticks height="10" interval="0.5" ></e-axis-minorticks>
                    </e-circulargauge-axis>
                </e-circulargauge-axes>
            </ejs-circulargauge>
        </div>
    </div>
<div class="col-md-4 property-section">
    <table id="property" title="Properties" style="width: 100%; margin-left: -10px">
        <tbody>
            <tr style="height: 50px">
                <td>
                    <div id="">Pointer Color</div>
                </td>
                <td>
                    <div>
                        <select id="poiterColor" class="form-control" style="width:100%">
                            <option value="#f03e3e" selected="true">#f03e3e</option>
                            <option value="#4472c4">#4472c4</option>
                            <option value="#ed7d31">#ed7d31</option>
                        </select>
                    </div>
                </td>
            </tr>
            <tr style="height: 50px">
                <td>
                    <div id="">Label Color</div>
                </td>
                <td>
                    <div>
                        <select id="labelColor" class="form-control" style="width:100%">
                            <option value="#f03e3e" selected="true">#f03e3e</option>
                            <option value="#4472c4">#4472c4</option>
                            <option value="#ed7d31">#ed7d31</option>
                        </select>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
</div>
}
<script>
    var value = ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW', ''];
    var pointerColor, circulargauge;
    var labelColor;
    window.addEventListener('load', function () { 
        pointerColor = new ej.dropdowns.DropDownList({
            index: 0,
            placeholder: 'Select Range Bar Color',
            width: '100%',
            change: function () {
                var rangeColor = pointerColor.value.toString();
                circulargauge.axes[0].pointers[0].color = rangeColor;                
                circulargauge.refresh();
            }
        });
        pointerColor.appendTo('#poiterColor');
        labelColor = new ej.dropdowns.DropDownList({
            index: 0,
            placeholder: 'Select Range Bar Color',
            width: '100%',
            change: function () {
                var rangeColor = labelColor.value.toString();
                circulargauge.axes[0].labelStyle.font.color = rangeColor;
                circulargauge.refresh();
            }
        });
        labelColor.appendTo('#labelColor');
    });
    window.axisLabelRender = function (args) {
        args.text = value[args.value];
    }
    window.gaugeload = function (args) {
        @* custom code start *@
        var theme = themeName ? themeName : 'Material';
        args.gauge.theme = (theme.charAt(0).toUpperCase() +
            theme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');
        @* custom code end *@
        if (window.gaugeLoaded)
            return;
        window.gaugeLoaded = true;
        circulargauge = args.gauge;
        var axis = args.gauge.axes[0];        
        axis.pointers = [{
            value: 7,
            radius: '50%',
            color: '#f03e3e',
            pointerWidth: 20,
            cap: {
                radius: 0
            },
            animation: { enable: false }
        }, {
            value: 3,
            radius: '50%',
            color: '#9E9E9E',
            pointerWidth: 20,
            cap: {
                radius: 0
            },
            animation: { enable: false }
        }];
    }
</script>
@section Title{
                    <title>ASP.NET Core CircularGauge Direction Compass Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Direction Compass in ASP.NET Core CircularGauge Control</h1>
                }