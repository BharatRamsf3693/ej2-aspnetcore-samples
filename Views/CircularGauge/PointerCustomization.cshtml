@using Syncfusion.EJ2;
@section Meta{
                    <meta name="description" content="This example demonstrates the Pointer Customization in ASP.NET Core CircularGauge control. Explore here for more details."/>
                }
@section ActionDescription{
    <div id="action-description">
        <p>
            This sample illustrates how to customize the gauge with pointers.
            Options to change the color and type of the pointer are available in the property panel.
        </p>
    </div>
}
@section Description{
    <div id="description">
        <p>
            In this example, you can see how to customize the gauge elements such as <code>pointers</code> and <code>range</code>.
            Here, a needle and range bar are added to show the current value and its appearance
            can be customized by using options in property panel.
        </p>
        <p>
            More information on the range and pointer customization can be found in this
            <a target="_blank" href="http://ej2.syncfusion.com/documentation"> documentation section</a>.
        </p>
    </div>
}
@section ControlsSection{

    <div class="control-section" style="border:0px;">
        <div class="row">
            <div class="col-sm-12">
                <div class="row">
                    <div class="col-sm-4">
                        @{
                            var labelFont = new Syncfusion.EJ2.CircularGauge.CircularGaugeFont
                            {
                                Size = "0px",
                                Color = "#ff5985"
                            };

                        }
                        <ejs-circulargauge id="container2" load="gaugeload2" style="height:250px;">
                            <e-circulargauge-axes>
                                <e-circulargauge-axis startAngle="270" endAngle="90" minimum="0" maximum="100" radius="90%">
                                    <e-axis-linestyle width="3" color="#01aebe"></e-axis-linestyle>
                                    <e-axis-labelstyle position="@Syncfusion.EJ2.CircularGauge.Position.Outside" font="labelFont">
                                    </e-axis-labelstyle>
                                    <e-axis-majorticks height="0" width="1" interval="100" color="transparent"></e-axis-majorticks>
                                    <e-axis-minorticks height="0" width="0" color="transparent"></e-axis-minorticks>
                                </e-circulargauge-axis>
                            </e-circulargauge-axes>
                        </ejs-circulargauge>
                    </div>
                    <div class="col-sm-4">
                        <ejs-circulargauge id="container1" load="gaugeload1" style="height:250px;">
                            <e-circulargauge-axes>
                                <e-circulargauge-axis startAngle="270" endAngle="90" minimum="0" maximum="100" radius="90%">
                                    <e-axis-linestyle width="3" color="#ff5985"></e-axis-linestyle>
                                    <e-axis-labelstyle position="@Syncfusion.EJ2.CircularGauge.Position.Outside" font="labelFont">
                                    </e-axis-labelstyle>
                                    <e-axis-majorticks height="0" width="1" interval="100" color="transparent"></e-axis-majorticks>
                                    <e-axis-minorticks height="0" width="0" color="transparent"></e-axis-minorticks>
                                </e-circulargauge-axis>
                            </e-circulargauge-axes>
                        </ejs-circulargauge>
                    </div>
					<div class="col-sm-4">
						<ejs-circulargauge id="container4" load="gaugeload4" style="height:250px;">
							<e-circulargauge-axes>
								<e-circulargauge-axis startAngle="270" endAngle="90" minimum="0" maximum="100" radius="90%">
									<e-axis-linestyle width="3" color="#9250e6"></e-axis-linestyle>
									<e-axis-labelstyle position="@Syncfusion.EJ2.CircularGauge.Position.Outside" font="labelFont">
									</e-axis-labelstyle>
									<e-axis-majorticks height="0" width="1" interval="100" color="transparent"></e-axis-majorticks>
									<e-axis-minorticks height="0" width="0" color="transparent"></e-axis-minorticks>
								</e-circulargauge-axis>
							</e-circulargauge-axes>
						</ejs-circulargauge>
					</div>
                </div>
            </div>
            <div class="col-sm-12">
                <div class="row">
                    <div class="col-sm-4">
						<ejs-circulargauge id="container3" load="gaugeload3" centerY="40%" style="height:250px;">
							<e-circulargauge-axes>
								<e-circulargauge-axis startAngle="270" endAngle="90" minimum="0" maximum="100" radius="90%">
									<e-axis-linestyle width="3" color="#1E7145"></e-axis-linestyle>
									<e-axis-labelstyle position="@Syncfusion.EJ2.CircularGauge.Position.Outside" font="labelFont">
									</e-axis-labelstyle>
									<e-axis-majorticks height="0" width="1" interval="100" color="transparent"></e-axis-majorticks>
									<e-axis-minorticks height="0" width="0" color="transparent"></e-axis-minorticks>
								</e-circulargauge-axis>
							</e-circulargauge-axes>
						</ejs-circulargauge>
                    </div>
                    <div class="col-sm-4">
                        <ejs-circulargauge id="container6" load="gaugeload6" centerY="40%" style="height:250px;">
                            <e-circulargauge-axes>
                                <e-circulargauge-axis startAngle="270" endAngle="90" minimum="0" maximum="100" radius="90%">
                                    <e-axis-linestyle width="3" color="#e3a21a"></e-axis-linestyle>
                                    <e-axis-labelstyle position="@Syncfusion.EJ2.CircularGauge.Position.Outside" font="labelFont">
                                    </e-axis-labelstyle>
                                    <e-axis-majorticks height="0" width="1" interval="100" color="transparent"></e-axis-majorticks>
                                    <e-axis-minorticks height="0" width="0" color="transparent"></e-axis-minorticks>
                                </e-circulargauge-axis>
                            </e-circulargauge-axes>
                        </ejs-circulargauge>
                    </div>
                    <div class="col-sm-4">
                        <ejs-circulargauge id="container5" load="gaugeload5" centerY="40%" style="height:250px;">
                            <e-circulargauge-axes>
                                <e-circulargauge-axis startAngle="270" endAngle="90" minimum="0" maximum="100" radius="90%">
                                    <e-axis-linestyle width="3" color="transparent"></e-axis-linestyle>
                                    <e-axis-labelstyle position="@Syncfusion.EJ2.CircularGauge.Position.Outside" font="labelFont">
                                    </e-axis-labelstyle>
                                    <e-axis-majorticks height="0" width="1" interval="100" color="transparent"></e-axis-majorticks>
                                    <e-axis-minorticks height="0" width="0" color="transparent"></e-axis-minorticks>
                                </e-circulargauge-axis>
                            </e-circulargauge-axes>
                        </ejs-circulargauge>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script>
    
    window.addEventListener('load', function () {
        var fifthGauge = document.getElementById('container4').ej2_instances[0];
        var sixthGauge = document.getElementById('container5').ej2_instances[0];
        window.pointeGauge5Interval1 = setInterval(function () {
            var newVal = Math.random() * (90 - 20) + 20;
            if (document.getElementById('container4')) {
                fifthGauge.axes[0].pointers[0].value = newVal;
                fifthGauge.refresh();
            }
            else {
                clearInterval(window.pointeGauge5Interval1);
            }
        }, 1000);
        window.gauge6Interval1 = setInterval(function () {
            var newVal = Math.random() * (80 - 30) + 30;
            if (document.getElementById('container5')) {
                sixthGauge.axes[0].pointers[0].value = newVal;
                sixthGauge.axes[0].pointers[1].value = newVal;
                sixthGauge.refresh();
            }
            else {
                clearInterval(window.gauge6Interval1);
            }
        }, 1000);
    });
    window.gaugeload1 = function (args) {
        @* custom code start *@
        var theme = themeName ? themeName : 'Material';
        args.gauge.theme = (theme.charAt(0).toUpperCase() +
            theme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');
        @* custom code end *@
        if (window.gaugeLoaded)
            return;
        window.gaugeLoaded = true;
        var axis = args.gauge.axes[0];
        axis.pointers = [{
            type: 'RangeBar',
            value: 66,
            radius: '90%',
            color: '#ff5985',
            pointerWidth: 10,
            animation: { enable: true, duration: 1000 }
        }]
        axis.annotations = [
            {
                angle: 180,
                radius: '20%', zIndex: 1,
                content: '<div style="color:#757575; font-family:Roboto; font-size:14px;">Range Bar</div>'
            }
        ]
    }
    window.gaugeload2 = function (args) {
        @* custom code start *@
        var theme = location.hash.split('/')[1];
        theme = theme ? theme : 'Material';
        args.gauge.theme = (theme.charAt(0).toUpperCase() +
            theme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');
        @* custom code end *@
        if (window.gaugeLoaded2)
            return;
        window.gaugeLoaded2 = true;
        var axis = args.gauge.axes[0];
        axis.pointers = [{
            radius: '100%',
            value: 80,
            type: 'Marker',
            markerShape: 'InvertedTriangle',
            markerWidth: 15,
            markerHeight: 15,
            color: 'rgb(0,171,169)'
        }];
        axis.annotations = [
            {
                angle: 180,
                radius: '20%', zIndex: 1,
                content: '<div style="color:#757575; font-family:Roboto; font-size:14px;">Marker</div>'
            }
        ]
    }
    window.gaugeload3 = function (args) {
        @* custom code start *@
        var theme = location.hash.split('/')[1];
        theme = theme ? theme : 'Material';
        args.gauge.theme = (theme.charAt(0).toUpperCase() +
            theme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');
        @* custom code end *@
        if (window.gaugeLoaded3)
            return;
        window.gaugeLoaded3 = true;
        var axis = args.gauge.axes[0];
        axis.pointers = [{
			animation: { enable: true, duration: 1000 },
			value: 70,
			radius: '80%',
			color: 'green',
			pointerWidth: 2,
			needleStartWidth: 4,
			needleEndWidth: 4,
			cap: {
				radius: 8,
				color: 'green'
			},
			needleTail: {
				length: '0%'
			}

        }];
        axis.annotations = [
            {
                angle: 180,
                radius: '20%', zIndex: 1,
				content: '<div style="color:#757575; font-family:Roboto; font-size:14px; padding-top: 26px">Customized Needle</div>'
            }
        ]
    }
    window.gaugeload4 = function (args) {
        @* custom code start *@
        var theme = location.hash.split('/')[1];
        theme = theme ? theme : 'Material';
        args.gauge.theme = (theme.charAt(0).toUpperCase() +
            theme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');
        @* custom code end *@
        if (window.gaugeLoaded4)
            return;
        window.gaugeLoaded4 = true;
        var axis = args.gauge.axes[0];
        axis.pointers = [{
            radius: '100%',
            animation: { enable: true, duration: 900 },
            value: 70,
            color: '#923C99',
            pointerWidth: 6,
            cap: { radius: 0 },
            needleTail: { length: '4%', color: '#923C99' }
        }];
        axis.annotations = [
            {
                angle: 180,
                radius: '20%', zIndex: 1,
                content: '<div style="color:#757575; font-family:Roboto; font-size:14px;">Needle</div>'
            }
        ]
    }
    window.gaugeload5 = function (args) {
        @* custom code start *@
        var theme = location.hash.split('/')[1];
        theme = theme ? theme : 'Material';
        args.gauge.theme = (theme.charAt(0).toUpperCase() +
            theme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');
        @* custom code end *@
        if (window.gaugeLoaded5)
            return;
        window.gaugeLoaded5 = true;
        var axis = args.gauge.axes[0];
        axis.pointers = [{
            radius: '100%',
            animation: { enable: true, duration: 900 },
            value: 40,
            color: '#067bc2',
            pointerWidth: 6,
            cap: { radius: 0 },
            needleTail: { length: '4%', color: '#067bc2' }
        }, {
            radius: '100%',
            type: 'RangeBar',
            animation: { enable: true, duration: 900 },
            value: 40,
            color: '#067bc2',
            pointerWidth: 5
        }];
        axis.annotations = [
            {
                angle: 180,
                radius: '20%', zIndex: 1,
                content: '<div style="color:#757575; font-family:Roboto; font-size:14px;">Live Update</div>'
            }
        ]
    }
    window.gaugeload6 = function (args) {
        @* custom code start *@
        var theme = location.hash.split('/')[1];
        theme = theme ? theme : 'Material';
        args.gauge.theme = (theme.charAt(0).toUpperCase() +
            theme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');
        @* custom code end *@
        if (window.gaugeLoaded6)
            return;
        window.gaugeLoaded6 = true;
        var axis = args.gauge.axes[0];
        axis.pointers = [{
            radius: '80%',
            value: 80,
            markerWidth: 5,
            markerHeight: 5,
            animation: { enable: true, duration: 1000 },
            color: '#e3a21a',
            pointerWidth: 10,
            cap: {
                radius: 8,
                color: 'white',
                border: {
                    color: '#e3a21a',
                    width: 1
                }
            },
            needleTail: {
                length: '20%',
                color: '#e3a21a'
            }
        }, {
            radius: '60%', value: 40,
            markerWidth: 5, markerHeight: 5,
            animation: { duration: 1000 },
            color: '#ffb133',
            pointerWidth: 10,
            cap: {
                radius: 8, color: 'white',
                border: { color: '#ffb133', width: 1 }
            },
            needleTail: { length: '20%', color: '#e3a21a' }
        }];
        axis.annotations = [
            {
                angle: 180,
                radius: '25%', zIndex: 1,
                content: '<div style="color:#757575; font-family:Segoe UI; font-size:14px;">Multiple Needles</div>'
            }
        ]
    }
</script>
@section Title{
                    <title>ASP.NET Core CircularGauge Pointer Customization Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Pointer Customization in ASP.NET Core CircularGauge Control</h1>
                }