@using Syncfusion.EJ2.HeatMap;
@section ControlsSection{
    @{
        var xAxisLabel = new string[] { "Cereals", "Meat", "Spices", "Tea", "Edible Oil", "Dairy Products", "Wheat" };
        var yAxisLabel = new string[] { "2014", "2015", "2016", "2017", "2018" };

    }
<div class="col-md-9 control-section">
    <div id="container" style="height:300px" align="center">
        <ejs-heatmap id="container" allowSelection="true" showTooltip="true" cellSelected="window.oncellSelected" load="window.onHeatmapLoad" dataSource="ViewBag.dataSource">
            <e-heatmap-titlesettings text="Top export products 2014-2018, Value in USD million">
            </e-heatmap-titlesettings>
            <e-heatmap-xaxis labels="xAxisLabel"></e-heatmap-xaxis>
            <e-heatmap-yaxis labels="yAxisLabel"></e-heatmap-yaxis>
            <e-heatmap-palettesettings>
                <e-palettes>
                    <e-palette color="#3C5E62"></e-palette>
                    <e-palette color="#86C843"></e-palette>
                </e-palettes>
            </e-heatmap-palettesettings>
            <e-heatmap-legendsettings visible="false"></e-heatmap-legendsettings>
        </ejs-heatmap>
    </div>
    <div id="container1" style="height:300px" align="center">
        <ejs-chart id="container1" load="window.onChartLoad">
            <e-chart-tooltipsettings enable="true"></e-chart-tooltipsettings>
            <e-chart-primaryxaxis valueType="Category" interval="1">
                <e-majorgridlines width="0"></e-majorgridlines>
            </e-chart-primaryxaxis>
            <e-chart-primaryyaxis>
                <e-majorgridlines width="0"></e-majorgridlines>
                <e-majorticklines width="0"></e-majorticklines>
                <e-linestyle width="0"></e-linestyle>
                <e-labelstyle color="transparent"></e-labelstyle>
            </e-chart-primaryyaxis>
            <e-series-collection>
                <e-series dataSource="ViewBag.dataSource1" xName="x" width=2 yName="y" name="Cereals" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Column">
                    <e-series-marker>
                        <e-series-datalabel visible="false"></e-series-datalabel>
                    </e-series-marker>
                </e-series>
                <e-series dataSource="ViewBag.dataSource2" xName="x" width=2 yName="y" name="Meat" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Column">
                    <e-series-marker>
                        <e-series-datalabel visible="false"></e-series-datalabel>
                    </e-series-marker>
                </e-series>
                <e-series dataSource="ViewBag.dataSource3" xName="x" width=2 yName="y" name="Spices" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Column">
                    <e-series-marker>
                        <e-series-datalabel visible="false"></e-series-datalabel>
                    </e-series-marker>
                </e-series>
                <e-series dataSource="ViewBag.dataSource4" xName="x" width=2 yName="y" name="Tea" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Column">
                    <e-series-marker>
                        <e-series-datalabel visible="false"></e-series-datalabel>
                    </e-series-marker>
                </e-series>
                <e-series dataSource="ViewBag.dataSource5" xName="x" width=2 yName="y" name="Edible Oil" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Column">
                    <e-series-marker>
                        <e-series-datalabel visible="false"></e-series-datalabel>
                    </e-series-marker>
                </e-series>
                <e-series dataSource="ViewBag.dataSource6" xName="x" width=2 yName="y" name="Dairy Products" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Column">
                    <e-series-marker>
                        <e-series-datalabel visible="false"></e-series-datalabel>
                    </e-series-marker>
                </e-series>
                <e-series dataSource="ViewBag.dataSource7" xName="x" width=2 yName="y" name="Wheat" type="@Syncfusion.EJ2.Charts.ChartSeriesType.Column">
                    <e-series-marker>
                        <e-series-datalabel visible="false"></e-series-datalabel>
                    </e-series-marker>
                </e-series>
            </e-series-collection>
        </ejs-chart>
    </div>
</div>
    <div class="col-md-3 property-section">
        <table id="property" title="Properties" style="width: 100%">
            <tbody>
                <tr style="height: 50px">
                    <td style="width: 40%;">
                        <div>
                            <button id="clearSelection">Clear Selection</button>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <script type="text/javascript">
        window.onChartLoad = function (args) {
            var selectedTheme = themeName ? themeName : 'Material';
            args.chart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');
        }
        window.onHeatmapLoad = function (args) {
            var selectedTheme = location.hash.split("/")[1];
            selectedTheme = selectedTheme ? selectedTheme : "Material";
             args.heatmap.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');
        }
        window.oncellSelected = function (args) {
            var data = args.data
            var length = data.length;
            var xAxis = [];
            var flag = []
            var series = [];
            var chart = document.getElementById('container1').ej2_instances[0];
            for (let i = 0; i < length; i++) {
                if (xAxis.indexOf(data[i].xLabel) === -1) {
                    xAxis.push(data[i].xLabel);
                    flag.push(false);
                }
            }
            for (var i = 0; i < length; i++) {
                var index = xAxis.indexOf(data[i].xLabel);
                if (!flag[index]) {
                    flag[index] = true;
                    var column = {};
                    column.type = 'Column';
                    column.xName = 'x';
                    column.yName = 'y';
                    column.width = 2;
                    column.name = data[i].xLabel;
                    column.marker = { dataLabel: { visible: false } };
                    column.dataSource = [];
                    var columnData = {};
                    columnData.x = data[i].yLabel;
                    columnData.y = data[i].value;
                    column.dataSource.push(columnData);
                    series.push(column);
                }
                else {
                    var columnData = {};
                    columnData.x = data[i].yLabel;
                    columnData.y = data[i].value;
                    series[index].dataSource.push(columnData);
                }
            }
            chart.series = series;
            chart.refresh();
        };

        var button = new ej.buttons.Button();
        button.appendTo('#clearSelection');
        document.getElementById('clearSelection').onclick = () => {
            var heatMap = document.getElementById('container').ej2_instances[0];
            var chart = document.getElementById('container1').ej2_instances[0];
            heatMap.clearSelection();
            chart.series = [{
                "type": "Column", "xName": "x", "width": 2, "yName": "y", "name": "Cereals",
                "dataSource": [{ "x": "2014", "y": 2.9 }, { "x": "2015", "y": 5.2 }, { "x": "2016", "y": 3.4 }, { "x": "2017", "y": 5.6 }, { "x": "2018", "y": 4.4 }],
                "marker": { "dataLabel": { "visible": false } }
            },
            {
                "type": "Column", "xName": "x", "width": 2, "yName": "y", "name": "Meat",
                "dataSource": [{ "x": "2014", "y": 6.6 }, { "x": "2015", "y": 4.8 }, { "x": "2016", "y": 8 }, { "x": "2017", "y": 3.9 }, { "x": "2018", "y": 6.5 }],
                "marker": { "dataLabel": { "visible": false } }
            },
            {
                "type": "Column", "xName": "x", "width": 2, "yName": "y", "name": "Spices",
                "dataSource": [{ "x": "2014", "y": 5.1 }, { "x": "2015", "y": 4.6 }, { "x": "2016", "y": 5.4 }, { "x": "2017", "y": 3.9 }, { "x": "2018", "y": 4.3 }],
                "marker": { "dataLabel": { "visible": false } }
            },
            {
                "type": "Column", "xName": "x", "width": 2, "yName": "y", "name": "Tea",
                "dataSource": [{ "x": "2014", "y": 5.2 }, { "x": "2015", "y": 4.3 }, { "x": "2016", "y": 3.9 }, { "x": "2017", "y": 6.2 }, { "x": "2018", "y": 6.4 }],
                "marker": { "dataLabel": { "visible": false } }
            },
            {
                "type": "Column", "xName": "x", "width": 2, "yName": "y", "name": "Edible Oil",
                "dataSource": [{ "x": "2014", "y": 7 }, { "x": "2015", "y": 3 }, { "x": "2016", "y": 1.9 }, { "x": "2017", "y": 5.9 }, { "x": "2018", "y": 3.5 }],
                "marker": { "dataLabel": { "visible": false } }
            },
            {
                "type": "Column", "xName": "x", "width": 2, "yName": "y", "name": "Dairy Products",
                "dataSource": [{ "x": "2014", "y": 7.8 }, { "x": "2015", "y": 5.9 }, { "x": "2016", "y": 3.9 }, { "x": "2017", "y": 4.3 }, { "x": "2018", "y": 4.5 }],
                "marker": { "dataLabel": { "visible": false } }
            },
            {
                "type": "Column", "xName": "x", "width": 2, "yName": "y", "name": "Wheat",
                "dataSource": [{ "x": "2014", "y": 6.5 }, { "x": "2015", "y": 4.3 }, { "x": "2016", "y": 3.9 }, { "x": "2017", "y": 5.2 }, { "x": "2018", "y": 3.9 }],
                "marker": { "dataLabel": { "visible": false } }
            }
            ];
            chart.refresh();
        };
    </script>
}

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample visualizes the revenue from the top exported products between the year 2014 and 2018, valued in USD million
        </p>
    </div>
}
@section Description{

    <div id="description">
        <p>
            In this example, you can see how to selected the cell in heat map and render the column chart based on selected data.
        </p>
        <p>
            Tooltip is enabled in this example, to see the tooltip in action, hover a point or tap on a point in touch enabled devices.
        </p>
        <br />
    </div>
}
@section Meta{
                    <meta name="description" content="This example demonstrates the Selection in ASP.NET Core HeatMap Chart control. Explore here for more details."/>
                }
@section Title{
                    <title>ASP.NET Core HeatMap Chart Selection Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Selection in ASP.NET Core HeatMap Chart Control</h1>
                }
<style>
         body.material-dark .property-panel-section {
            color: #ffffff;
        }
</style>