@using Syncfusion.EJ2
@*@model directive allows you to access the model values*@
@model EJ2CoreSampleBrowser.Controllers.DropdownListValue
@section ControlsSection{
<div class="col-lg-12 control-section">
	<div class="control-wrapper">
		<div style='padding-top:70px;'>
			<form method="post">
				<ejs-dropdownlist id="dropdownlistfor" name="val" dataSource="@Model.data" placeholder="e.g. Basketball" ejs-for="@Model.val"></ejs-dropdownlist>
				<div id="errorMessage">
					<span asp-validation-for="val"></span>
				</div>
				<div id="submitbutton">
					<ejs-button id="submitButton" content="Submit"></ejs-button>
				</div>
			</form>
		</div>
	</div>
</div>
}
<style>

	.control-wrapper {
		margin: 0 auto;
		width: 250px;
	}

	#submitbutton {
		margin: 10px auto;
		text-align: center;
	}

	#errorMessage {
		color: red;
		text-align: center
	}
</style>

@section ActionDescription{
<div id="action-description">
	<p>
		This sample demonstrates the strongly-typed extension support in <code>Dropdown List</code>. The value of Dropdown List is set from code behind and it is set to Dropdown List in view page by invoking the strongly-typed DropdownListForFor helper.
	</p>
</div>
}
@section Description{
<div id="description">
	<p>
		Click the submit button to post the selected value in the Dropdown List. When posting the null value, validation error message will be shown below the Dropdown List.
	</p>
</div>
}
@section Title{
                    <title>ASP.NET Core DropDownList DropDownListFor Example - Syncfusion Demos </title> 
                }
@section Meta{
                    <meta name="description" content="This example demonstrates the DropDownListFor in ASP.NET Core DropDownList control. Explore here for more details."/>
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of DropDownListFor in ASP.NET Core DropDownList Control</h1>
                }