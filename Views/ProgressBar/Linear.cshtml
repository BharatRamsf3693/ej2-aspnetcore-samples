@using Syncfusion.EJ2
@section ControlsSection {
    <div class="control-section">
        <div class="row linear-parent">
            <div>
                <div class="col-lg-12 col-sm-12 progressbar-label">Determinate</div>
                <div id="lineardeterminate">
                    <ejs-progressbar id="lineardeterminate"
                                     type='Linear'
                                     height='60'
                                     minimum="0" maximum="100"
                                     value=100
                                     load="progressLoad">
                        <e-progressbar-animation enable=true duration=2000 delay=0></e-progressbar-animation>
                    </ejs-progressbar>
                </div>
            </div>
            <div>
                <div class="col-lg-12 col-sm-12 progressbar-label">Indeterminate</div>
                <div id="linearindeterminate">
                    <ejs-progressbar id="linearindeterminate"
                                     type='Linear'
                                     height='60'
                                     minimum="0" maximum="100"
                                     value=20 isIndeterminate="true"
                                     load="progressLoad">
                        <e-progressbar-animation enable=true duration=2000 delay=0></e-progressbar-animation>
                    </ejs-progressbar>
                </div>
            </div>
            <div>
                <div class="col-lg-12 col-sm-12 progressbar-label">Segment</div>
                <div id="linearsegment">
                    <ejs-progressbar id="linearsegment"
                                     type='Linear'
                                     height='60'
                                     minimum="0" maximum="100"
                                     value=100 segmentCount="8" gapWidth="10"
                                     load="progressLoad">
                        <e-progressbar-animation enable=true duration=2000 delay=0></e-progressbar-animation>
                    </ejs-progressbar>
                </div>
            </div>
            <div>
                <div class="col-lg-12 col-sm-12 progressbar-label">Buffer</div>
                <div id="linearbuffer">
                    <ejs-progressbar id="linearbuffer"
                                     type='Linear'
                                     height='60'
                                     minimum="0" maximum="100"
                                     value=40 secondaryProgress="60"
                                     load="progressLoad">
                        <e-progressbar-animation enable=true duration=2000 delay=0></e-progressbar-animation>
                    </ejs-progressbar>
                </div>
            </div>
            <div>
                <div class="col-lg-12 col-sm-12 progressbar-label">Active</div>
                <div id="linearactive">
                    <ejs-progressbar id="linearactive"
                                     type='Linear' 
                                     height='60'
                                     minimum="0" 
                                     maximum="100"
                                     value=100
                                     load="progressLoad"
                                     isActive="true"
                                     >
                        <e-progressbar-animation enable=true duration=2000 delay=0></e-progressbar-animation>
                    </ejs-progressbar>
                </div>
            </div>
        </div>
        <div class="row linear-parent">
            <button id="reLoad" class="e-control e-btn e-lib e-outline e-primary">Reload</button>
        </div>
    </div>
    <script>
        var div = document.getElementsByClassName('progressbar-label');
        var progressLoad = function (args) {
            var selectedTheme = location.hash.split('/')[1];
            selectedTheme = selectedTheme ? selectedTheme : 'Material';
            args.progressBar.theme = (selectedTheme.charAt(0).toUpperCase() +
                selectedTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');
            if (args.progressBar.theme === 'HighContrast' || args.progressBar.theme === 'Bootstrap5Dark' || args.progressBar.theme === 'BootstrapDark' || args.progressBar.theme === 'FabricDark'
                || args.progressBar.theme === 'TailwindDark' || args.progressBar.theme === 'MaterialDark' || args.progressBar.theme === 'FluentDark') {
                for (let i = 0; i < div.length; i++) {
                    div[i].setAttribute('style', 'color:white');
                }
            }
        };
        var replayBtn = document.getElementById('reLoad');
        replayBtn.onclick = function () {
            var determinateProgress = document.getElementById('lineardeterminate').ej2_instances[0];
            var indeterminateProgress = document.getElementById('linearindeterminate').ej2_instances[0];
            var segmentProgress = document.getElementById('linearsegment').ej2_instances[0];
            var bufferProgress = document.getElementById('linearbuffer').ej2_instances[0];
            var activeProgress = document.getElementById('linearactive').ej2_instances[0];
            determinateProgress.refresh();
            indeterminateProgress.refresh();
            segmentProgress.refresh();
            bufferProgress.refresh();
            activeProgress.refresh();
        };
    </script>
}
@section ActionDescription{
    <p>
        This sample illustrates a linear progress bar with determinate and indeterminate states, segments and buffer value.
    </p>
}
@section Description{
    <p>
        In this example, you can see how to render and configure the linear progress bar.
        Progress bar is used to visualize the progression of an extended operation.
        The sample shows the determinate and indeterminate states, buffer and segments of linear progress bar.
    </p>

}
<style>
    #control-container {
        padding: 0px !important;
    }

    .linear-parent {
        text-align: center;
        width: 80%;
        margin: auto;
    }

    .progressbar-label {
        text-align: left;
        font-family: Roboto-Regular;
        font-size: 14px;
        color: #3D3E3C;
        margin-left: 10px;
        padding: 0px;
        top: 10px;
    }

    #reLoad {
        border-radius: 4px;
        text-transform: capitalize;
    }
</style>