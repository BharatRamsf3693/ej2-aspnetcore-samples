@using Syncfusion.EJ2

@{
    string[] items = new string[] { "NewFolder", "Cut", "Copy", "Paste", "Delete", "Download", "Rename", "SortBy", "Refresh", "Selection", "View", "Details" };
    string[] layout = new string[] { "SortBy", "View", "Refresh", "|", "Paste", "|", "NewFolder", "|", "Details", "|", "SelectAll" };
    string[] file = new string[] { "Cut", "Copy", "Paste", "Delete", "Rename", "|", "Details" };
}

@section ControlsSection{
    <div class=" control-section">
        <div class="sample-container">
            <ejs-filemanager id="filemanager">
                <e-filemanager-ajaxsettings url="https://realtime-firebase.azurewebsites.net/api/FirebaseProvider/FirebaseRealtimeFileOperations"
                                            downloadUrl="https://realtime-firebase.azurewebsites.net/api/FirebaseProvider/FirebaseRealtimeDownload"
                                            uploadUrl="https://realtime-firebase.azurewebsites.net/api/FirebaseProvider/FirebaseRealtimeUpload"
                                            getImageUrl="https://realtime-firebase.azurewebsites.net/api/FirebaseProvider/FirebaseRealtimeGetImage">
                </e-filemanager-ajaxsettings>
                <e-filemanager-toolbarsettings items="items">
                </e-filemanager-toolbarsettings>
                <e-filemanager-contextmenusettings file="file" layout="layout">
                </e-filemanager-contextmenusettings>
            </ejs-filemanager>
        </div>
    </div>

}

@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates how to utilize the Firebase realtime cloud storage database with File Manager component. To run the service, create an <a target="_blank" href="https://console.firebase.google.com/" aria-label="Navigate to Firebase Console for Realtime Database">firebase realtime database</a> and then register the firebase realtime database <i><b>Rest API link</b></i> and <i><b>rootNode</b></i> name within the <code>RegisterFirebaseRealtimeDB</code> method to perform the file operations.</p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            The <b>File Manager</b> component is used to explore a file system through a web application, similar to the windows explorer for windows. It supports all the basic file operations such as create, rename, delete, refresh and so on.
        </p>
        <p>
            <b>Note: </b>File Manager's upload functionality is restricted in online demo. To work with upload functionality, please download <a target="_blank" href="https://github.com/SyncfusionExamples/firebase-realtime-database-aspcore-file-provider" aria-label="Navigate to GitHub sample for firebase-realtime-database-aspcore-file-provider">firebase-realtime-database-aspcore-file-provider</a> from the GitHub repository.
        </p>

    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Firebase Realtime File Provider in ASP.NET Core File Manager control. Explore here for more details."/>
                }
@section Title{
                    <title>ASP.NET Core File Manager Firebase Realtime File Provider Example - Syncfusion Demos </title>
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Firebase Realtime File Provider in ASP.NET Core File Manager Control</h1>
                }