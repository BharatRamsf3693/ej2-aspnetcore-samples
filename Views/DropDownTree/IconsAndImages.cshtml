@using Syncfusion.EJ2
@{
    List<ParentItem> Parent = new List<ParentItem>();
    List<ChildItem> Child1 = new List<ChildItem>();
    List<ChildItem> Child2 = new List<ChildItem>();
    List<ChildItem> Child3 = new List<ChildItem>();
    List<ChildItem> Child4 = new List<ChildItem>();
    List<ChildItem> Child5 = new List<ChildItem>();
    List<SubChild> SubChild = new List<SubChild>();

    Parent.Add(new ParentItem { nodeId = "01", nodeText = "Music", icon = "folder", child = Child1, });
    Child1.Add(new ChildItem { nodeId = "01-01", nodeText = "Gouttes.mp3", icon = "audio" });

    Parent.Add(new ParentItem { nodeId = "02", nodeText = "Videos", icon = "folder", child = Child2, });
    Child2.Add(new ChildItem { nodeId = "02-01", nodeText = "Naturals.mp4", icon = "video" });
    Child2.Add(new ChildItem { nodeId = "02-02", nodeText = "Wild.mpeg", icon = "video" });

    Parent.Add(new ParentItem { nodeId = "03", nodeText = "Documents", icon = "folder", child = Child3, });
    Child3.Add(new ChildItem { nodeId = "03-01", nodeText = "Environment Pollution.docx", icon = "docx" });
    Child3.Add(new ChildItem { nodeId = "03-02", nodeText = "Global Water, Sanitation, & Hygiene.docx", icon = "docx" });
    Child3.Add(new ChildItem { nodeId = "03-03", nodeText = "Global Warming.ppt", icon = "ppt" });
    Child3.Add(new ChildItem { nodeId = "03-04", nodeText = "Social Network.pdf", icon = "pdf" });
    Child3.Add(new ChildItem { nodeId = "03-05", nodeText = "Youth Empowerment.pdf", icon = "pdf" });

    Parent.Add(new ParentItem { nodeId = "04", nodeText = "Pictures", icon = "folder", child = Child4, expanded = true, });
    Child4.Add(new ChildItem { nodeId = "04-01", nodeText = "Camera Roll", icon = "folder", child = SubChild, expanded = true });
    SubChild.Add(new SubChild { nodeId = "04-01-01", nodeText = "WIN_20160726_094117.JPG", image = "../images/dropdown-tree/2.png" });
    SubChild.Add(new SubChild { nodeId = "04-01-02", nodeText = "WIN_20160726_094118.JPG", image = "../images/dropdown-tree/9.png" });
    Child4.Add(new ChildItem { nodeId = "04-02", nodeText = "Wind.jpg", icon = "images" });
    Child4.Add(new ChildItem { nodeId = "04-03", nodeText = "Stone.jpg", icon = "images" });

    Parent.Add(new ParentItem { nodeId = "05", nodeText = "Downloads", icon = "folder", child = Child5, });
    Child5.Add(new ChildItem { nodeId = "05-01", nodeText = "UI-Guide.pdf", icon = "pdf" });
    Child5.Add(new ChildItem { nodeId = "05-02", nodeText = "Tutorials.zip", icon = "zip" });
    Child5.Add(new ChildItem { nodeId = "05-03", nodeText = "Game.exe", icon = "exe" });
    Child5.Add(new ChildItem { nodeId = "05-04", nodeText = "TypeScript.7z", icon = "zip" });
    string Child = "child";
}
@section ControlsSection{
    <div class="control-section dropdowntree-icons">
        <div class="control-wrapper">
            <ejs-dropdowntree id="tree" popupHeight="200px" placeholder="Select a folder or file">
                <e-dropdowntree-fields dataSource="Parent" child="Child" value="nodeId" text="nodeText" expanded="expanded" iconCss="icon" imageURL="image"></e-dropdowntree-fields>
            </ejs-dropdowntree>
        </div>
    </div>
}
@section Meta{
                    <meta name="description" content="This example demonstrates the Icons and Images in ASP.NET Core Dropdown Tree control. Explore here for more details."/>
                }
@section ActionDescription{
    <p>
        This sample explains you about the Dropdown Tree item that can be configured by the icons or images. Click on the
        icon or double click on it to expand or collapse and to show the icons or images that are configured with the
        items.
    </p>
}

@section Description{
    <p>
        The <code>Dropdown Tree</code> control has the built-in option to customize each item's appearance with the
        icons and images by mapping the <code>iconCss</code> and <code>imageURL</code> fields.
    </p>
    <p>In this demo, the Dropdown Tree is showcased like a file system with custom icons and images.</p>
}

<style>
     .dropdowntree-icons .control-wrapper {
        width: 80%;
        margin: 0 auto;
        max-width: 380px;
        padding-top: 15px
    }

    .e-ddt .e-list-img {
        width: 25px;
        height: 25px;
    }
    .e-ddt .e-list-icon {
        background-repeat: no-repeat;
        background-image: url('@Url.Content("~/images/dropdown-tree/file_icons.png")');
        height: 20px;
    }
    /* Specify the icon positions based upon class name */
    .e-ddt .e-list-icon.folder { background-position: -197px -552px }
    .e-bigger .e-ddt .e-list-icon.folder { background-position: -197px -550px; }
    .e-ddt .e-list-icon.docx { background-position: -197px -20px }
    .e-ddt .e-list-icon.ppt { background-position: -197px -48px }
    .e-ddt .e-list-icon.pdf { background-position: -197px -104px }
    .e-ddt .e-list-icon.images { background-position: -197px -132px }
    .e-ddt .e-list-icon.zip { background-position: -197px -188px }
    .e-ddt .e-list-icon.audio { background-position: -197px -244px }
    .e-ddt .e-list-icon.video { background-position: -197px -272px }
    .e-ddt .e-list-icon.exe { background-position: -197px -412px }
</style>

@section Title{
                    <title>ASP.NET Core Dropdown Tree Icons and Images Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Icons and Images in ASP.NET Core Dropdown Tree Control</h1>
                }