@using Syncfusion.EJ2
@{
    List<object> Parent = new List<object>();
    Parent.Add(new { id = 1, name = "Australia", hasChild = true, expanded = true });
    Parent.Add(new { id = 2, pid = 1, name = "New South Wales" });
    Parent.Add(new { id = 3, pid = 1, name = "Victoria" });
    Parent.Add(new { id = 4, pid = 1, name = "South Australia" });
    Parent.Add(new { id = 6, pid = 1, name = "Western Australia" });
    Parent.Add(new { id = 7, name = "Brazil", hasChild = true });
    Parent.Add(new { id = 8, pid = 7, name = "Paraná" });
    Parent.Add(new { id = 9, pid = 7, name = "Ceará" });
    Parent.Add(new { id = 10, pid = 7, name = "Acre" });
    Parent.Add(new { id = 11, name = "China", hasChild = true });
    Parent.Add(new { id = 12, pid = 11, name = "Guangzhou" });
    Parent.Add(new { id = 13, pid = 11, name = "Shanghai" });
    Parent.Add(new { id = 14, pid = 11, name = "Beijing" });
    Parent.Add(new { id = 15, pid = 11, name = "Shantou" });
    Parent.Add(new { id = 16, name = "France", hasChild = true });
    Parent.Add(new { id = 17, pid = 16, name = "Pays de la Loire" });
    Parent.Add(new { id = 18, pid = 16, name = "Aquitaine" });
    Parent.Add(new { id = 19, pid = 16, name = "Brittany" });
    Parent.Add(new { id = 20, pid = 16, name = "Lorraine" });
    Parent.Add(new { id = 21, name = "India", hasChild = true });
    Parent.Add(new { id = 22, pid = 21, name = "Assam" });
    Parent.Add(new { id = 23, pid = 21, name = "Bihar" });
    Parent.Add(new { id = 24, pid = 21, name = "Tamil Nadu" });
    Parent.Add(new { id = 25, pid = 21, name = "Punjab" });
}
@section ControlsSection{

    <div class="col-lg-12 control-section">
        <div class="control-wrapper" style='padding-top:75px;'>
            <ejs-dropdowntree id="tree" popupHeight="200px" customTemplate="${value.length} item(s) selected" placeholder="Select items" mode="Custom" showCheckBox="true">
                <e-dropdowntree-treeSettings autoCheck="true"></e-dropdowntree-treeSettings>
                <e-dropdowntree-fields dataSource="Parent" value="id" parentValue="pid" text="name" hasChildren="hasChild" expanded="expanded"></e-dropdowntree-fields>
            </ejs-dropdowntree>
        </div>
    </div>
}

@section Meta{
                    <meta name="description" content="This example demonstrates the Custom Template in ASP.NET Core Dropdown Tree control. Explore here for more details."/>
                }
@section ActionDescription{
   <p>This sample explains you about the custom template support of the Dropdown Tree. When you click the checkbox, the selected items will be visualized based on the given custom template.
   </p>
}

@section Description{
    <p>The <code>Dropdown Tree</code> control allows the user to select more than one value while enabling the checkbox or multi selection support.</p>
    <p>The user can visualize the custom template instead of the selected item texts in the Dropdown Tree by enabling the <code>mode</code> type as <code>Custom</code>. User can also customize the given template by using the <code>customTemplate</code> property.
    </p>
    <p>In this demo, the Dropdown Tree is populated with the checkbox and custom template feature.</p>
}

<style>
    .control-wrapper {
        margin: 0 auto;
        width: 250px;
    }
</style>

@section Title{
                    <title>ASP.NET Core Dropdown Tree Custom Template Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Custom Template in ASP.NET Core Dropdown Tree Control</h1>
                }